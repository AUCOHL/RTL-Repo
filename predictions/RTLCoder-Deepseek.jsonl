{"generated": "for(i=0;i<10;i=i+1) begin\r", "label": "for(i=0;i<10;i=i+1) begin\r"}
{"generated": "endmodulemodule uart_transmitter(tx_in,tx_clock,tx_reset,tx_start,tx_data_in,tx_out,tx_busy);", "label": "always @(state_rx)"}
{"generated": "        .right_player_location_out(right_player_location_out),", "label": "        .left_player_input(left_player_input),"}
{"generated": "`timescale 1ns / 1ps//////////////////////////////////////////////////////////////////////////////////// Company: // Engineer: // // Create Date: 14.02.2024 03:1", "label": "                            reg_write_en = 0;"}
{"generated": "\t\tfir_coeff[16] = 16'h1;\r\t\tfir_coeff[17] = 16'hFFFD;\r\t\tfir_coeff[18] = 16", "label": "\t\tfir_coeff[16] = 16'hFFF8;\r"}
{"generated": " {A,B} = 2'b00;\r", "label": " {A,B} = 2'b00;\r"}
{"generated": "  reg       rst;", "label": "  reg       rst; "}
{"generated": "            count <= 0;            clk_d <= ~clk_d;        end        else            count <= count + 1;    endendmodule", "label": "            count <= 0;"}
{"generated": "        dirty <= dirty_array[index];\r\r        if(en_write) begin\r            if(write_data_sel)  cache_data[index][BLOCK_SIZE-1: 0] <= dataIn;", "label": "        dirty <= dirty_array[index];\r"}
{"generated": "// 10-May-22 ", "label": "    end else case (fsm_state) "}
{"generated": "    else if(decrement & amount <= count)        set2<=1;    else        set2 <= set2;end    assign LED2 = set2;    reg set3 =0;  always@(posedge", "label": "    else if(decrement & amount <= count)"}
{"generated": "\t\t3'b011:begin\t\t\t\ts = 1'b0;\t\t\t\tc = 1'b1;\t\t\t  end\t\t3'b100:begin\t\t\t\ts = 1'b1;\t\t\t\tc = 1'", "label": "\t\t3'b011:begin"}
{"generated": "`timescale 1ns / 1ps", "label": "    K: rotor_2_output = {8'h6B,8'h6B};"}
{"generated": "_IR[6:0]==BR_TYPE)begin    NPC=EX_MEM_ALUOUT;    IF_ID=MEM[NPC];    end    else begin    NPC<=NPC+32", "label": "    if(ID_EX_IR[31:25]== 7'd1)begin"}
{"generated": "module tsmc13_neg (", "label": "reg signed [7:0] max_xi;"}
{"generated": "memory[119] <= 8'b0;\t\t\tdata_memory[120] <= 8'b0;\t\t\tdata_memory[121] <= 8'b0;\t\t\tdata_memory[", "label": "\t\t\tdata_memory[123] <= 8'b0;"}
{"generated": "      $readmemb(\"fp_adder_test_vectors.txt\", data);\r\r", "label": "      bit_err = 0;\r"}
{"generated": "module program_counter(input clk,reset,input [31:0] PCPlus4F,PCBranchD,PCJump,output [31:0] PC", "label": "reg MemwriteE,ALUSrcE;"}
{"generated": "\t\t\t\tmultiplier[i] <= $signed(coeff[i]) * $signed(data_in);\r\t\t\t\t// adder\r\t\t\t\tif(i == 0)\r\t\t\t\t\tadder[i] <= $", "label": "\t\t\t\tmultiplier[i] <= $signed(coeff[`FILTER_SIZE/2-1-i]) * $signed(data_in);\r"}
{"generated": "module plugboard(", "label": "module plugboard("}
{"generated": "// ==============================================================// Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022", "label": "#0 ap_loop_init = 1'b1;"}
{"generated": "// /home/jimmy/VNMCC/src/MIPS/RAM.hs:40:1-7  assign c$wild_app_arg_0 = $unsigned({{(64-32)", "label": "  assign c$wild_app_arg_0 = $unsigned({{(64-32) {1'b0}},c$i});"}
{"generated": " initial PC = 0;", "label": "always@(RESET)"}
{"generated": " read_data1;            ID_EX_data2 <= read_data2;            ID_EX_imm <= imm;            ID_EX_rs1 <= inst[19:15];            ID_EX_rs2", "label": "        .MEM_WB_reg_write(MEM_WB_reg_write),"}
{"generated": "      always @ (posedge clk) ", "label": "     always @ (posedge clk) "}
{"generated": "_257, n_258;  wire n_259, n_260, n_261, n_262, n_263, n_264, n", "label": "  aoi22d1 g3829__9906(.A1 (\\mem[1] [23]), .A2 (n_580), .B1 (\\mem[3]"}
{"generated": "11111111111111;\r    #10\r    $display(\"----------------\\nOperation: nor\\n----------------\");\r    op = 6'b100111; \r", "label": "    op = 6'b101011; A = -100; B = 1;\r"}
{"generated": "                b_i = (i - 100) % 10;                carry_i = 1;            end            #1            $display(\"a_i = %d, b_i = %d, carry_i", "label": "                b_i = (i - 100) % 10;"}
{"generated": "A = 1; B = 1; #5;$finish;endendmodulemodule top_module(", "label": "A = 1; B = 1; #5;"}
{"generated": "always @(posedge clk)\r", "label": "always @(posedge clk)\r"}
{"generated": "    IDELAYCTRL", "label": "    IDELAYCTRL_inst ("}
{"generated": "Logic0_), .PD(n_Logic0_), .SMT(n_Logic0_), .O(i_D[27]) );\tXMC ipad_D28 ( .I(", "label": "\tYA2GSC opad_Z0 ( .I(i_Z[0]), .E(n_Logic1_), .E2(n_Logic1_), .E4(n_Logic1_), .E8(n_Logic1_), .SR(n_Logic1_), .O(Z[0]));"}
{"generated": "`timescale 1ns / 1ps", "label": "\t\t\t\t\tgame_status <= PLAY;\t\t\t"}
{"generated": "            case (state)", "label": "            case (state)\r"}
{"generated": "    output reg RegWEn_EXMEM_out,    output reg MemRW_EXMEM_out,    output reg [1:0] WBsel_EXMEM_out);", "label": "    output reg RegWEn_EXMEM_out,    "}
{"generated": "`timescale 1ns / 1ps", "label": "    assign xored_y[2] = y[2] ^ cin;"}
{"generated": "                r_Bit_Index <= r_Bit_Index + 1;                r_SM_Main     <= s_TX_DATA_BITS;              end                else                begin                r_Bit_Index <= 0;                r_", "label": "                    r_Bit_Index <= r_Bit_Index + 1;"}
{"generated": "\t\t$display(\"b = %h\",b);\r\t\t$display(\"control = %h\",control);\r\t\t$display(\"result = %h\", result);\r\t\t\r\t\t/* Test 5 */\r\t\t$display(\"******** lw *****", "label": "\t\t$display(\"b = %h\",b);\r"}
{"generated": "    out = 0;", "label": "    out <= 16'd0;"}
{"generated": "        $dumpfile(\"add_sub.vcd\");", "label": "    $dumpfile(\"add_sub.vcd\");"}
{"generated": "module asyn_dff_en(\r\tinput D, clk, En,\r\toutput Q, PR, CLR\r\t);\r\twire and", "label": "module asyn_dff(\r"}
{"generated": "\t\tend\r\t\r\tinitial\r\t\tbegin\r\t\t\t#100000;\r\t\t\tassign clk = !clk;\r\t\t\t#20000;\r\t\t\tassign D = 1;", "label": "\t\t\tassign clk = !clk;\r"}
{"generated": "                    state_nxt = IDLE_ST;", "label": "                    state_nxt = IDLE_ST;"}
{"generated": "ifier_buses;\t     update_last_notifiers;\t     latch_inputs;\t     update_logic;\t     x_inputs;\t     if (LAST_CLK)\t       begin\t\t ", "label": "      $period(posedge CLK, 3.000, NOT_CLK_PER);"}
{"generated": "_Kernel_uproad_G5 =   'b11110101111111111111;parameter signed [NN_KERNEL_BIT - 1 :0 ]", "label": "            mult_uproad_R4 = C2_mult_uproad_R4;"}
{"generated": "endcaseend", "label": "RegWriteD='b0;"}
{"generated": "// .reset(reset), \t.data_in(instruction_outTop), \t.data_out(data_to_LED_Top), \t.read_address(read_address_LED), \t.write_address(", "label": "\t.reset(reset), "}
{"generated": "module mux_tb();", "label": "   #100 Data_in=3'b011;"}
{"generated": "module InstructionRAM    ( // Inputs", "label": "  wire [63:0] x1_projection;"}
{"generated": "        RegDst = 0;", "label": "        RegDst = 0;"}
{"generated": " SINGLE;\r            SINGLE: state_nxt = (Branch == 1)? IF : (MemRead == 1)? MEM : (RegWrite == 1)? IF : IDLE;\r            MULTI: state", "label": "                    if(ReadData1 == ReadData2) next_PC = PC + {i_IMEM_data[31], i_IMEM_data[7], i_IMEM_data[30:25], i_IMEM_data[11:8],1'b0};\r"}
{"generated": " initial #50 $finish;\rendmodule \r", "label": " initial #50 $finish;\r"}
{"generated": "            if(pls) begin\r", "label": "            if(pls && !pulse) begin\r"}
{"generated": "input wire [XLEN-1:0] i_id_op1;", "label": "input wire [XLEN-1:0] i_id_op1;"}
{"generated": "endgenerate", "label": "endgenerate"}
{"generated": "            count_val = 4'b0;\r", "label": "            count_val = 16'b0;            \r"}
{"generated": "wire diff,bor;", "label": "wire diff,bor;"}
{"generated": "\r\r\r//state machine\r\r\ralways @(posedge clk)\r\rbegin\r\rif(!rst)\r\rp_state <= decode_address;\r\relse\r\rp_state <= next_state", "label": "check_parity_error = 3'b110,\r"}
{"generated": "endmodulemodule KeyboardDecoder(", "label": "                        next_ball_v_x = 20;"}
{"generated": "task   initial   begin         h_phi2 = 0;         h_rst_b = 0;         h_cs_b = 1;         h_rdnw = 1;         h_addr = 3'b0", "label": "        repeat (50)"}
{"generated": "//****************************************Copyright (c)***********************************//\u539f\u5b50\u54e5\u5728\u7ebf\u6559\u5b66\u5e73\u53f0\uff1awww.yuanzige.com//\u6280\u672f\u652f\u6301", "label": "    .op_rd_data (op_rd_data),   "}
{"generated": "\t\tattempt2: \t\tif (isCorrect == 1 && Enter == 1) Y = match;\r\t\t\t\t\t\t\telse if (isCorrect == 1 && Change == 1) Y = change_combo;\r\t\t\t\t\t\t\telse Y =", "label": "\t\tattempt2: Y = attempt2;\r"}
{"generated": "    mod_dp data_path(\r        .clk(clk),\r        .reset(reset),\r        .subtract(subtract),\r        .load(load),\r        .A(A),\r", "label": "    mod_dp datapath(\r"}
{"generated": "AsyncMetaReset reset(clk, 1'b0, reset);", "label": "always @(posedge clk)"}
{"generated": "module Register (", "label": "    input [31:0] writeData,"}
{"generated": "on;\r\r\rassign clk_select = (state == count_down_money || state == count_down_card || state == keep_transc_not)? 1:0;\r\r\ralways @(posedge", "label": "\t\t\t\t\telse if(id_card1 == 2 && money_card2 >= 1000 && flag == 0) begin\r"}
{"generated": "module top_e2prom(", "label": "module top_e2prom("}
{"generated": "                if(inputs == 8'b00000001) begin", "label": "                free_note <= _i;"}
{"generated": "endmodule", "label": "    #200 $finish;"}
{"generated": "//          8'b00000010:Data_out=3'b001", "label": "          8'b00000001 :Data_out=3'b000;"}
{"generated": "// \t\trom", "label": "    reg [31:0] rom_mem [0:255];"}
{"generated": " always@(*)", "label": " assign #2 OUT1 = regFile[OUT1ADDRESS];"}
{"generated": "\tinitial begin", "label": "  reg reset_elevator2;"}
{"generated": "            end", "label": "            patternB = patternB + 1;"}
{"generated": "counter ct2(.clk(clk), .clear(rst), .i_enable(i_over), .i_in(i_candidate_2), .o_out(o_count2));", "label": "counter ct2(.clk(clk), .clear(rst), .i_enable(i_over), .i_in(i_candidate_2), .o_out(o_count2));"}
{"generated": "                ram[wr_pos] <= data_in;", "label": "                ram[wr_pos] <= data_in;"}
{"generated": "endmodulemodule top();", "label": "    i_mac_valid <= 'd1;"}
{"generated": "module top_module(\r    input clk,                // Clock input\r    input reset,              // Reset input\r    input valid,              // valid data dato dal testbench\r    input ready_out,          // data", "label": "module acc_pipe(X1, X2, X3, X4, Y, ready, valid, ready_out, valid_out, clk, arst);\r"}
{"generated": "    xor Gate2(S,S1,C_in);", "label": "    and Gate2(C1,X,Y);"}
{"generated": "        if(rst_i) begin", "label": "        if(rst_i) begin"}
{"generated": "endmodule", "label": "\tinitial begin"}
{"generated": "    .memWrite(),    .memRead(),    .address(),    .writeData(),    .readData());", "label": "    .memWrite(),"}
{"generated": "module control_unit(\t// Inputs", "label": "\t\t\t\t\t\t\t3'b001: begin"}
{"generated": "module mux_2to1(input [31:0] in0,in1,input sel,output reg [31:0] out);", "label": "         $display(\"THE SIMULATION HAS  SUCCESSEDED AT  TIME%0t \",$time);   "}
{"generated": "\t\t.rd0_value_i(rd0_value_i),\r", "label": "\t\t.rd0_value_i(rd0_value_i),\r"}
{"generated": "input clk;", "label": "parameter din0_WIDTH = 14;"}
{"generated": "\t\tif(search_count == 16'b0)", "label": "\t\tsearch_count = search_count + 1;"}
{"generated": "            if (i_RX_Serial == 1'b0)\r", "label": "            if (i_RX_Serial == 1'b0)\r"}
{"generated": "module array_multiplier(", "label": "module half_adder(input a, b, output s0, c0);"}
{"generated": "module stimuli(", "label": "module stimuli("}
{"generated": "\t\t\t\to_val <= o_in;\t\tend\tassign o_out = o_val;\tendmodule", "label": "\t\t\to_val <= o_in;"}
{"generated": "\talways @ (*) begin", "label": "\talways @(*)begin "}
{"generated": "    input [WIDTH-1:0] in1,", "label": "    $dumpvars(0, processor_tb);"}
{"generated": "case(state) ", "label": "case( state )  "}
{"generated": "_AXI_ARESETN == 0) || (reset == 1)),\t\t.ENABLE(run),\t  .READ((logo_not_ready) && (alpha_not_ready)),\t  .WRITE(S_AXIS_", "label": "\t  .READ(M_AXIS_TREADY_VIDEO && M_AXIS_TVALID_VIDEO),"}
{"generated": "                if(port_rd == 0 || port_empty == 1) begin", "label": "                ovr_rd_en = 0;"}
{"generated": "    counter RO0_counter(\r", "label": "    (* DONT_TOUCH = \"true\" *) wire RO0_out, RO1_out;\r"}
{"generated": "                CHECK_PARITY_ERROR :                   begin                    if(parity_done)                    NS = LOAD_AFTER_FULL;                    else                      NS = CHECK_PARITY_ERROR;                  end                LOAD_PARITY", "label": "        CHECK_PARITY_ERROR:"}
{"generated": "always @(posedge axis_clk) begin", "label": "input   wire            CLK;"}
{"generated": "input [address:0]write_ptr;", "label": "input [address:0]write_ptr;"}
{"generated": "state = ST_DATA;\r                else\r                    nxt_state = ST_HSYNC;\r            end\r            ST_DATA: begin\r                if(d_count == WIDTH*HEIGHT*2-1)\r", "label": "\t\tif (tempG0 < 0)\r"}
{"generated": "  reg [7:0] r_TX_Byte = 0;\r  wire w_RX_DV;\r  wire [7:0] w_RX_Byte;\r  wire w_TX_Active;", "label": "  wire w_TX_Active, w_UART_Line;\r"}
{"generated": "    Exponent =  Temp_Exponent+1'b1;  end  else if(Temp_Mantissa[45])begin    Mantissa = Temp_Mantissa[44:22]; ", "label": "     Exponent =  Temp_Exponent; "}
{"generated": "module flipflop(q, clk, rst, d);", "label": "module flipflop(q, clk, rst, d);"}
{"generated": "    dut dut_inst (", "label": "    assign (strong1, weak0) GSR = GSR_int;"}
{"generated": "endmodule : fsm_in_top", "label": "        .feed(feed_w)"}
{"generated": "\t\t\t\tspi_addr[7:0] <= buffer;\t\t\t\toutbuf <= memory[spi_addr];\t\t\tend\t\t\tbytecount <= bytecount + 1;\t\tend\tendtask\talways @(posed", "label": "\t\t\t\t\tspi_addr[7:0] <= buffer;"}
{"generated": "102;  wire n103;  wire n104;  wire n105;  wire n106;  wire n107;  wire n108;  wire n1", "label": "  sky130_fd_sc_hd__nand2_2 U31 ("}
{"generated": "module decoder_generic", "label": "module decoder_generic"}
{"generated": "\t\tif(num == 24'd1000000)\tbegin\t\t\tclk_divi <= ~clk_divi;\t\t\tnum <= 0;\t\tend\tend\talways@(posed", "label": "\t\tif(num == 24'h000000)"}
{"generated": "(tap_num1 == 0)begin\t\t\t\t\ttap_num1 <= 11;\t\t\t\tend\t\t\t\telse if(tap_num_count > 0)begin\t\t\t\t\ttap_num1 <= tap_num1 - ", "label": "\t\t\t\tcount <= count + 1;"}
{"generated": "    (m_data_byteen==4'b1000)?{{24{Din[31]}},{Din[31:24]}}: \t\t\t\t  4'b0000", "label": "\t\t\t\t  (m_data_byteen==4'b1000)?{{24{Din[31]}},{Din[31:24]}}: "}
{"generated": "\telse ram_ack <= 0;\rend\r\rendmodule", "label": "\telse ram_ack <= 0;\r"}
{"generated": "module micro_top();", "label": "   in_reset     <= values[4];"}
{"generated": "\talways #5 clk = ~clk;\r", "label": "\talways #10 clk = ~clk;\r"}
{"generated": "                7'b0000011: note = `MI + _oct;                7'b0000100: note = `FA + _oct;                7'b000010", "label": "                7'b0000100: note = `MI + _oct;"}
{"generated": "\t\t\t\tALU_out = ~(input_1 | input_2);\r", "label": "\t\t\t\tALU_out = ~ (input_1 | input_2);\r"}
{"generated": "            AWADDR<=mwrite_address;", "label": "            AWADDR<=mwrite_address;"}
{"generated": "\toutput wire s_axi_ctrl_arready,\toutput wire [S_AXI_CTRL_DATA_WIDTH-1 : 0] s_axi_ctrl_rdata,\toutput wire s_", "label": "\toutput wire s_axi_ctrl_arready,"}
{"generated": "    output wire         ref_signal,    output wire         done    );", "label": "    output wire         ref_signal,"}
{"generated": "default : Control <= 4'bxxxx;\rendcase\rendcase\rend\rendmodule\r", "label": "default : Control <= 4'bxxxx;\r"}
{"generated": "subtractor_4_bit s3 (.X(X[11:8]),.Y(Y[11:8]),.Bi(b[1]),.Bf(b[2]),.Z", "label": "\tsubtractor_4_bit s3 (.X(X[11:8]),.Y(Y[11:8]),.Bi(b[1]),.Bf(b[2]),.Z(Z[11:8]));"}
{"generated": "module rom_128x8 (", "label": "   task latch_inputs;"}
{"generated": "assign clk_out = w_clk_out;", "label": "always @(posedge clk or negedge rst) begin"}
{"generated": "// else", "label": "\t else if (opcode == 4)"}
{"generated": "\t\t\tPS2_STATE_4_TRANSMIT_PARITY\t\t\t= 3'h4,\r", "label": "\t\t\tPS2_STATE_4_TRANSMIT_STOP_BIT\t\t= 3'h4,\r"}
{"generated": "`timescale 1ns / 1ps", "label": "    assign input4_image = (enable_max_pool && (rowCount_image < `IMAGEROW))?"}
{"generated": "            miss_count <= miss_count + 1;", "label": "            miss_count <= miss_count + 1;"}
{"generated": "    .clk(dummy_clock),", "label": "    .clk(dummy_clock),"}
{"generated": "        a = master_key;", "label": "        a = {master_key[66:0],master_key[79:67]};"}
{"generated": "    SPI_SLAVE #(.MEM_DEPTH(MEM_DEPTH), .ADDR_SIZE(ADDR_SIZE)) SPI_SLAVE_inst (\r        .CLK(clk),\r       ", "label": "    SPI_SLAVE #(.ADDR_SIZE(ADDR_SIZE)) SLAVE (.CLK(clk), .RST(rst_n), .SS_n(SS_n), .MOSI(MOSI),\r"}
{"generated": "endmodule\r", "label": "black_cell Arr2_black_cell2(in_Pk[4], in_Gk[4], in_Pk[6], in_Gk[6], out_Gk[6], out_Pk[6]);\r"}
{"generated": "    half_adder H2(S[2], S[3], P[2], Carries[1]);", "label": "    half_adder H2(S[2], S[3], G[0], Carries[1]);"}
{"generated": "begin      valid=1'b1;      end      else      begin      valid=1'b0;      endendalways@(*)    begin      if(valid==1)      begin        if(haddr1>=8'", "label": "valid=1'b1;"}
{"generated": "\t\t\t\tRegWrite <= 0;\r", "label": "\t\t\t\tRegWrite <= 0;\r"}
{"generated": "001,3'b000);#10 $display(\"\\nor\");#10 test_bench(32'b000000_00001_00000_0", "label": "#10 test_bench(32'b000000_00000_00001_00000_00011_000000,32'bx,32'h111,32'h888,3'b000);"}
{"generated": "`timescale 1ns / 1ps\r", "label": "\telse if (op_code == 4'b0110 )begin\t"}
{"generated": "IRQ_irq;    // ICN_SS_APB3_to_Student_SS_3_APB wires:    wire [31:0] ICN_SS_APB3_to_Stud", "label": "    wire [3:0] Student_SS_2_PSEL;"}
{"generated": "\t\tcase(selector)\r", "label": "\t\tflagC = 1'b0;\r"}
{"generated": "                r = eqa ^ b;                end            4'b0001:    //or                 begin                    r = eqa | b;                end            default:                begin                    r = 32'bx;                end       ", "label": "                    r = eqa ^ b;"}
{"generated": "initial begin", "label": "initial begin"}
{"generated": "\t\tif (areset)", "label": "\t\tif (areset)"}
{"generated": "`include \"global.v\"", "label": "parameter ALMOST_FULL_GAP = 3;"}
{"generated": "    always @ (posedge clk) begin\r", "label": "  always @(posedge clk ) begin\r"}
{"generated": "        clk=0;", "label": "       clk = 1'b0;"}
{"generated": "\tparameter H_sync_cycle = 96;", "label": "--  O->vertical line total length :vert_line"}
{"generated": "endmodulemodule judge_collision(", "label": "    hecatia_y = 120;"}
{"generated": "endmodulemodule KeyboardDecoder(", "label": "                        new_ball_v_y <= tmp_new_ball_v_y;"}
{"generated": "    if (reset) begin", "label": "        if (reset) begin"}
{"generated": "// \tinput \t\t\t\t", "label": "#(parameter"}
{"generated": "\t\t\t1: width_reg <= S_AXI_WDATA;\t\t\t2: heigth_reg <= S_AXI_WDATA;\t\t\tdefault: ;\t\t\tendcase\t\t\taxi_bvalid <= 1", "label": "\talways @(posedge S_AXI_ACLK)"}
{"generated": "    clkgen_200kHz clkgen(        .clk_100MHz(CLK100MHZ),        .clk_200kHz(w_200k", "label": "    clkgen_200kHz cgen("}
{"generated": "endmodule", "label": "d_ff d3(.clk(clk),.din(o3),.dout(dout),.rst());"}
{"generated": "    approaching <= 0;        old_distance <= 0;     end     else begin        currentState <= nextState;     endendalways @*begin    nextState = currentState;    case (currentState)        IDLE: begin           ", "label": "        approaching <= 0;"}
{"generated": "module test_mips32;reg clk1,clk2;integer k;pipe_MIPS32 mips(clk1,clk2);initial", "label": "\tmips.Mem[5]=32'h20022200;"}
{"generated": "\tsoft_reset_1<=0;\rend\r\ralways @(*)begin\r\tif(~read_enb_2 && count2>=30)\r\tsoft_reset_2<=1;\r\telse\r", "label": "\tsoft_reset_1<=0;\r"}
{"generated": " \\target1_array[1][1] , \\target1_array[1][0] ,         \\target1_array[2][2] , \\target1_array[2][1] , \\target1_array", "label": "        \\U3/U161/Z_6 ) );"}
{"generated": "parameter WIDTH=4;\r", "label": "parameter WIDTH=4;\r"}
{"generated": "    output               PREADY,    output               PSLVERR,    // Interface: Clock    input                               clk,    // Interface: Reset    input                               reset,    // Interface: IRQ    output                              irq,", "label": "    output                              PREADY,"}
{"generated": "reg signed [BIT_WIDTH-1:0] rows[0:4][0:4];", "label": "wire signed[OUT_WIDTH-1:0] conv0, conv1, conv2, conv3;"}
{"generated": "and(P[1], A[1], B[0]);\r", "label": "and(c1, A[0], B[1]);\r"}
{"generated": " n53, n54, n55, n56, n57, n58,         n59, n60, n61, n62, n63, n64, n", "label": "  AO22_X1M_A9TR U33 ( .A0(N41), .A1(n410), .B0(N16), .B1(s), .Y(d[4]) );"}
{"generated": "\t\t\tComparator_Grt_3  =0;\r", "label": "\t\t\tComparator_Grt_3  =0;\r"}
{"generated": ".\\gpio_control_in_1a[6] ) ;\t\t\t$sdf_annotate(\"../../../caravel/sdf/gpio_control_block.sdf\", uut.\\gpio_control_in", "label": "\t\tpower1 <= 1'b0;"}
{"generated": "b1111:write_back?4'b0000:sram_wen),     // 4        .addra(index),   // 7        .dina(refresh?cacheline_new", "label": "        rdata_way1[8],"}
{"generated": "        if((OpCode==BEQ)&&(Zero==1))Branch=1;\r", "label": "        case(OpCode)\r"}
{"generated": "    always @(posedge clk_i) begin", "label": "reg main_start, main_end;"}
{"generated": "output match;output [ENTRY_WIDTH-1:0] match_addr;genvar i;generate for (i = 0; i < ROW_NUM; i = i+1) begin: encoder_inst          assign", "label": "output reg [ENTRY_WIDTH-1:0] match_addr;"}
{"generated": "// Created by prof. Mingu Kang @VVIP Lab in UCSD E", "label": "  always @(posedge clk) begin"}
{"generated": "  if(~rst_n) begin    a <= 1;    b <= 0;    c <= 1;    f1 <= 1;    f2 <= 0;  end  else begin    f1 <= a | b;", "label": "    if (~rst_n) begin"}
{"generated": "endmodulemodule test_mips32;", "label": "\t#600 $finish;"}
{"generated": "module voting_machine (", "label": "parameter hold =  2'b10,"}
{"generated": "endmodule", "label": "    #10 a = 1; b = 1; c = 1;"}
{"generated": "wire [9:0]startx;\r", "label": "wire [23:0]data;\r"}
{"generated": "\t\t\t\t4'b0101: alu_out <=a|b;\r\t\t\t\t4'b0110: alu_out <=a^b;\r\t\t\t\t4'b0111: alu_", "label": "\t\t\t\t4'b0101: alu_out <=a|b;\r"}
{"generated": "        a = 1'b1; b = 1'b0;\r        #100\r        // Test case 4\r        a = 1'b1; b = 1'b1;\r        #100", "label": "        a = 1'b1; b = 1'b0;\r"}
{"generated": "C: begin                        o_control_vector[`CTRL_ALU_VECTOR_MSB:`CTRL_ALU_VECTOR_LSB] = `ALU_OPCODE_GE;                    end", "label": "            `OPCODE_LUI_C, `OPCODE_AUIPC_C: begin"}
{"generated": "                (alu_op == 4'b0000) ? (op1 & op2) :", "label": "                    (alu_op == ALUOP_SLL) ? (op1 << op2[4:0]) :"}
{"generated": " initial #50 $finish;\rendmodule \r", "label": " initial #50 $finish;\r"}
{"generated": ") u_R3 (\r    .clk(clk),\r    .rst_n(rst_n),\r    .LIT_in(R3_DATA_i),\r    .LIT_out", "label": "    .LIT_OUT (`LIT_OUT)\r"}
{"generated": "module RegisterFile(", "label": "                                ALUCtl <= 4'b0000;"}
{"generated": "endmodulemodule top_module(", "label": "    else if (r_arp_cnt >= 6 && r_arp_cnt <= 7 && ri_mac_valid)"}
{"generated": "module alu_slice (input wire [1:0] op, input wire i0, i1, cin, output wire o, cout);   wire t_sumdiff, t_and, t_or, t_andor", "label": "   alu_slice _i6 (op, i0[6], i1[6], c[5], o[6], c[6]);"}
{"generated": "endmodule // BinToBasesConverter", "label": "        4'b1101: group1 = 4'b1101;"}
{"generated": "/**", "label": "            4: l1 = `four;"}
{"generated": "output reg Zero_flag );", "label": "output reg                                   Zero_flag "}
{"generated": "  //====================================================================//\r  //*   Extract type field\r  //====================================================================//\r  genvar i;\r  generate\r    for(i=0; i<TYPE_NUM; i=i+1) begin", "label": "  genvar idx;\r"}
{"generated": "        end", "label": "    initial begin"}
{"generated": " M : PASS\");                 $display(\"Simulation stop here.\");                 $finish;               end      end      if (HC_G == HC_EXP) begin        // flag2 1 means PASS, 0 means", "label": "                 if(flag1 == 1'b1)"}
{"generated": "// (C) 2001-2018 Intel Corporation. All rights reserved.// Your use of", "label": "                              ( (USE_RESET_REQUEST_IN2 == 1) ? reset_req_in2 : 1'b0)  |"}
{"generated": "    mux_32                 mux_dh1(read_data1, read_data2, id_dh_out, mux_dh1_out);\r", "label": "    forwarding_unit        fu(id_dh_out, id_out[9:5], ex_out[4:0], wb_out[4:0], ex_out[106], wb_out[70], fa, fb);\r"}
{"generated": "                0   0  :  0  :  0    ; // D => 0, GATE => 0                0   1  :  0  :  1    ; // D => 0, GATE => 1                1   0", "label": "`define SKY130_FD_SC_HD__UDP_MUX_2TO1_V"}
{"generated": "    output reg [31:0] RDATA,    output reg [1:0] RRESP,    output reg RVALID,    // write address channel    input wire AWVALID,    input wire [31:0", "label": "    output reg [31:0] RDATA,"}
{"generated": "if(Y == 0)\rzero = 1;\r", "label": "assign zero = (Y == 0) ? 1 : 0;\r"}
{"generated": "3_TO_0__q4, read_addr2_BITS_23_TO_0__q4;  wire [23 : 0] read_addr1_BITS_23_TO_0", "label": "      10'd92: rg_ram_rd_a_res$D_IN = rd_data_vec_rga[185:184];"}
{"generated": "        clk = ~clk;    end", "label": "        clk = ~clk;"}
{"generated": "//    if (s2 == 3'b000|| s2 == 3'b001|| s2 == 3'b010 || s2 == 3'b100) begin        PCMcode[", "label": "    if (s2 == 3'b000|| s2 == 3'b001|| s2 == 3'b010 || s2 == 3'b100) begin"}
{"generated": "    )", "label": ") u_ahb_lite_ms_model ("}
{"generated": "//ID    wire[31:0] pc;    PC pcm(nextpc, clk,", "label": "    InstructionMem IMEM(pc, instOut);"}
{"generated": "`timescale 1ns / 1ps", "label": "      else if(write_enb&&(~full))   "}
{"generated": "            MemWrite_MEM <= 0;            MemtoReg_MEM <= 0;            RegWrAddr_MEM <= 0;            ALUout_MEM <= 0;            PC_MEM <= 0;            Data2_MEM <= 0;", "label": "            MemWrite_MEM <= 0;"}
{"generated": "module tb;", "label": "  parameter st=400;"}
{"generated": "always @(posedge rclk or negedge rrst_n) begin", "label": " assign rempty_val = (rgraynext == rq2_wptr);"}
{"generated": " reg[7:0] A,B;", "label": " reg[7:0] A,B;"}
{"generated": "\t\t\t\tend\t\t\t\telse if(u_available == 1)begin\t\t\t\t\tstack_x[stack_count] <= x;\t\t\t\t\tstack_y[stack_count] <= y;\t\t\t\t\tstack_count <= stack_count + ", "label": "\t\t\t\t\tsymbol <= symbol + 1;"}
{"generated": "\t\t\t\t .read_enb_0(read_enb_0), \r\t\t\t\t .read_enb_1(read_enb_1), \r\t\t\t\t .read_enb_2(read_enb_", "label": "\t\t\t\t .read_enb_0(read_enb_0), \r"}
{"generated": "`timescale 1ns / 1ps", "label": "    ALU1 ALU9(A[9], B[9], COUT[8], AInvert, BNegate, 0, Op, Result[9], COUT[9]);"}
{"generated": "  task reset;", "label": "  task test_serin;"}
{"generated": "mem_8_eof(user_r_mem_8_eof),    .user_r_mem_8_open(user_r_mem_8_open),    .user_w_mem_8_", "label": "\t\t  .user_clk(user_clk),"}
{"generated": "module asyncfifo (  rd_aclr,  wr_aclr,  rdclk,  wrclk,  data", "label": "      for(integer idx=0; idx<words; idx=idx+1)"}
{"generated": "    always @(posedge clk) begin", "label": "    genvar idx;"}
{"generated": "        initial begin", "label": "        initial wb_clk = 0;"}
{"generated": "      2'b10: current_digit <= dig2;\r      2'b11: current_digit <= negative_sign ? 4'b1110 : 4'b1111;", "label": "      2'b10: current_digit <= dig2;\r"}
{"generated": "        if(cnt==8'd124)begin", "label": "        if(cnt==8'd24)begin"}
{"generated": "ifier_buses;\t    update_last_notifiers;\t    latch_inputs;\t    update_logic;\t    x_inputs;\t    process_violations;\t end   endtask   task valid_address;     ", "label": "\t LAST_CLK = _CLK;"}
{"generated": "module MCPU_RAMController_tb;", "label": "          mem_copy[i] = 9;"}
{"generated": "    always @(posedge clk) begin", "label": "    reg [31:0] Gap;"}
{"generated": "                   output               r_empty,\r", "label": "                   output               r_empty,\r"}
{"generated": "// Dual-", "label": "        ram[addrb] <= dib;"}
{"generated": "        end        else begin            Q <= D;        end    endmodule", "label": "        end else begin"}
{"generated": "endmodule", "label": "        insts[28] = 8'b0; insts[29] = 8'b0; insts[30] = 8'b0; insts[31] = 8'b0;"}
{"generated": "    always @ (X) begin", "label": "    always @ (X) begin"}
{"generated": "    reg[7:0] in0;", "label": "  \tinitial begin    "}
{"generated": "module half_sub(", "label": "module half_sub("}
{"generated": "    always @(posedge clk) begin", "label": "    always @(posedge clk) begin"}
{"generated": "SETN == 1'b0 )\r\t    axi_awready <= 1'b0;\r\t  else\r\t    if (~axi_awready && S_AXI_AWVALID && ~S_AXI_W", "label": "\t  if ( S_AXI_ARESETN == 1'b0 )\r"}
{"generated": "              r_SM_Main <= s_IDLE;", "label": "              r_SM_Main <= s_IDLE;"}
{"generated": "    input [3:0] A;", "label": "    xor x3(B2,B[2],m);"}
{"generated": "        if(memwrite)\r", "label": "    if(memwrite)\r"}
{"generated": "        if (jmp_type == `BEQ) begin", "label": "\treg [31:0] newHipAdd;"}
{"generated": "    assign Sign=((OpCode==SLTI)||(OpCode==SLTIU)||(OpCode==SLT)||(OpCode==SLTU))?1:0;\r", "label": "    assign Jump=(((OpCode==R)&&((Funct==JR)||(Funct==JALR)))||((OpCode==J)||(OpCode==JAL)))?1:0;\r"}
{"generated": "\t\t.ImmSrc(ImmSrc),\r", "label": "\t\t.RegWrite(RegWrite),\r"}
{"generated": "endmodulemodule top_module(", "label": "#10 A=1; B=0; K2 = 1; K1 = 0; K0 = 1; Cin = (K1);"}
{"generated": "// Exponent = exp_adjust;", "label": "           exp_adjust =  exp_adjust-1'b1;"}
{"generated": ".In_Data(In_Data),\r.En_Out(En_U0_to_U1),\r.Out_Data(Data_U0_to_U1)\r);\r\r//U1    Inst", "label": ".Data_In(In_Data),\r"}
{"generated": "   input  wire            a_en,\r", "label": "   input  wire            a_wr,\r"}
{"generated": "assign a[1] = num[1] & ~num[2] & ~num[3] & ~num[4] & ~num[5] & ~num[6] & ~num[7];    assign a[", "label": "    assign a[1] = num[1] & ~num[2] & ~num[3] & ~num[4] & ~num[5] & ~num[6] & ~num[7];"}
{"generated": "//     assign c[0] = add_", "label": "    output [n - 1:0] s,"}
{"generated": "endmodulemodule register(", "label": "\t\t.din (din),"}
{"generated": "        begin", "label": "        for (out = 0; out < IN_SIZE && in[out] !== 1; out = out + 1) begin"}
{"generated": "always@ (posedge clk)", "label": "     always @ (posedge clk) "}
{"generated": "Data_1_Sub_6_G,\rData_2_Add_5_A,\rData_2_Add_5_C,\rData_2_Add_5_F,\rData_2_Sub_", "label": "Data_1_Sub_6_G,\r"}
{"generated": "clk), .I(I), .FunSel(FunSel), .E(E4), .Q(Q_PCPast));        always @(*) begin        case (OutASel)            2'b0", "label": "    Memory _Memory("}
{"generated": "\t.in3(z[3]),\t.s(s3),.c(c3));full_adder f4(.in1(s1),.in2(s2),\t.in3(s3),\t.s", "label": ".in3(z[3]),\t"}
{"generated": " *", "label": " * Verilog primitive definition."}
{"generated": "                        state <= AB;\r", "label": "                        state <= AB;\r"}
{"generated": "    input [5:0] FunctionCode,", "label": "input [5:0] Funct,"}
{"generated": "// .clk_out(clk_out)  );  // Clock generation  initial begin    clk1 = 0;    clk2 = 0;    sel = 0;    #(CLK_PERIOD", "label": "    .clk_out(clk_out)"}
{"generated": "//", "label": ">>>>>>> 7ab1cd2eac5cb73e977a5e807d15ffd88a70e749"}
{"generated": "module processor", "label": "reg\t\t[4:0]\t\t\t\topcode;"}
{"generated": "    reg [7:0] InputNumber;", "label": "    reg [7:0] inp=10;"}
{"generated": "    reg clk;", "label": "            $time, x, y, cin, s, cout, overflow);"}
{"generated": "    always @(posedge clock) begin", "label": "    always @(*) begin"}
{"generated": "    \r    always @ (posedge clk)\r        if (reset)\r            begin\r                reg_c1 <= 0;\r                reg_alu <= 0;\r            end\r        else\r            begin\r                reg_", "label": "    wire [7:0] w1, w2;\r"}
{"generated": "`timescale 1ns / 1ps", "label": "               ( pixel_x>=119 && pixel_x<=139 && pixel_y>=130 && pixel_y<=230 )||"}
{"generated": "     (* DONT_TOUCH = \"true\" *) not not_0 (not_0_out, nand_out);\r", "label": "     (* DONT_TOUCH = \"true\" *) not not_0 (not_0_out, nand_out);\r"}
{"generated": "\tassign out = value;\t", "label": "\t\tassign\tout = value;"}
{"generated": "\t\t\t\tsample <= 0;\t\t\tend\t\tend\t\tRX_STATE_DATA: begin\t\t\tif (bitpos == 3'b11) begin\t\t\t\tstate <= RX_STATE_STOP;\t\t\t\tscratch", "label": "\t\t\t\tsample <= 0;"}
{"generated": "//     end else if(r_clk_cnt == (P_CLK_DIV_CNT >> 1) - 1) begin        ro_o_clk_div <= ~ro_o_cl", "label": "    end else if(r_clk_cnt == (P_CLK_DIV_CNT >> 1) - 1) begin"}
{"generated": "assign detect = btn_debounce & ~btn_shift;\r\r// Define interrupt_flag\ralways @(posedge clk_out or posedge rst) begin\r    if(rst) begin\r        interrupt_flag", "label": "assign detect = ~btn_shift & btn_debounce;  \r"}
{"generated": "\t\tLPM_MUX_component.lpm_widths = 1;", "label": "\t\tLPM_MUX_component.lpm_widths = 1;\r"}
{"generated": "module case(", "label": "module verilogcase("}
{"generated": "and and7(na0_b0 , a0_inv , B[0]);and and8(a0_nb0 , A[0] , b0_inv);nor nor1(x3 , na3_b", "label": "and and7(na0_b0 , a0_inv , B[0]);"}
{"generated": "// $Finish;\tend\talways @(posedge CCLKO_GLBL) begin\tGSR_int <= 1'b0;\tPRLD_int <= 1'b0;\tend\talways @(", "label": "\tGSR_int = 1'b0;"}
{"generated": "            EX_MEM_MemRead<=ID_EX_MemRead;\r", "label": "            EX_MEM_MemRead<=ID_EX_MemRead;\r"}
{"generated": "        counter<=counter+1;", "label": "        counter<=counter+1;"}
{"generated": "module MIPS_PIPELINED_PROCESSOR(input clk,reset);\r", "label": "StallF  = lwstall || branchstall ;"}
{"generated": "module rw_result_led(", "label": "module rw_result_led "}
{"generated": "        for(k=0;k<32;k=k+1)", "label": "    for(k=0;k<32;k=k+1)"}
{"generated": "always @(*) begin", "label": "reg CMP_Flag_Comp;"}
{"generated": "    .ALUop(ALUop), \r    .clk(clk), \r    .reset(reset), \r    .Result(Result)\r);\r\r// Clock generation\ralways #5 clk", "label": "    .ALUop(ALUop), \r"}
{"generated": "  else begin     Mantissa = Temp_Mantissa[45:23] ;     Exponent =  Temp_Exponent ;   endSign = A_sign ^ B_sign;result = {Sign,Ex", "label": "  else if(Temp_Mantissa[46])begin"}
{"generated": "`timescale 1ns / 1psmodule sipo_using_dff(", "label": "                q <= register;"}
{"generated": "        input wire [2 : 0] s00_axi_arprot,\t\tinput wire  s00_axi_arvalid,\t\toutput wire  s00_axi_arready,\t", "label": "\t\tinput wire [2 : 0] s00_axi_arprot,"}
{"generated": "0] jmp_pc = {XLEN{1'b0}};reg [XLEN-1:0] reg_r1 = {XLEN{1'b0}};reg [XLEN-", "label": "                                jmp_pc <= i_if_pc + b_imm;"}
{"generated": "        data0_reg <= `BSV_ASSIGNMENT_DELAY {((width + 1)/2) {2'b10}} ;", "label": "             empty_reg <= `BSV_ASSIGNMENT_DELAY 1'b0;"}
{"generated": "        LED1_blinkblink_1 <= 1'b0; //off state\r    end\rend\rendmodule", "label": "        LED1_blinkblink_1 <= 1'b0;\r"}
{"generated": "endmodulemodule top();", "label": "\t\t.O_video_dat \t\t\t\t\t\t(video_dpc_dat\t\t\t)"}
{"generated": "    assign w2 = w1 * c;\r", "label": "    assign w2 = c;\r"}
{"generated": "// input                                   S_AXI_WVALID,      output                                                  S_AXI_WREADY,    input[3:0]                              S_AXI_WSTRB,    // \"Send Write Response\"               --", "label": "    input                                   S_AXI_WVALID,"}
{"generated": "                reg [ADDRSIZE:0] rptrToWclk,                          wptrToRclk,                          rptr,                          wptr;", "label": "        wire [ADDRSIZE-1:0] read_address,"}
{"generated": "endmodulemodule top_module(", "label": "$display ( \"732 em binario = %8b\", b3 );"}
{"generated": "            endcase    endendmodule", "label": "            default: out = 32'b0;"}
{"generated": "level_en;    reg           fifo_fill_level_rst;    reg           fifo_fill_level_inc;    reg           fifo_fill_level_dec;    reg           fifo_fill_level", "label": "      assign almost_empty_data = 0;"}
{"generated": "        if (~freeze) begin\r", "label": "        if (pipe_x == 0) begin\r"}
{"generated": "    // internal wire \r\r    wire win_w , loose_w , press_w ;\r\r    // instance of dice_gen\r\r    dice_gen dice1 (.reset(reset), .clk(cl", "label": "    reg [3:0] sum;\r"}
{"generated": "0.000:0.000;\r\tspecparam fall$A3$Q\t= 0.000:0.000:0.000;\r\tspecparam rise$A3", "label": "\tspecparam fall$A13$Q\t= 0.000:0.000:0.000;\r"}
{"generated": "    output reg cmd_done,    output reg [1:0] cmd_error,    output reg [39:0] cmd_rsp,    output reg [1:0] cmd_rsp_error,    output", "label": "    input finish,"}
{"generated": "  reg [7:0] dat1, dat2, dat3, dat4, dat5, dat6, dat7, dat8;", "label": "  reg [7:0] dat1, dat2, dat3, dat4, dat5, dat6, dat7, dat8;"}
{"generated": "module Snake (", "label": "\tlocalparam RIGHT = 2'b11;"}
{"generated": "                initialMax <= input1;", "label": "                if($signed(input2) < $signed(input1)) begin"}
{"generated": "    input [3:0] ALU_CTRL,    input ZERO,    output [31:0] ALU_RESULT    );    reg [31:0] ALU_RESULT_REG;    always", "label": "    input [3:0] ALU_CTRL,"}
{"generated": "module uart_transmitter_tb;", "label": "input tx_start;"}
{"generated": "module RAM_TB();", "label": "module RAM_TB;"}
{"generated": "     {carry,o_ALU_Res_E}={1'b0,U_A%U_B};\r", "label": "     {carry,o_ALU_Res_E}= {1'b0,U_A%U_B};\r"}
{"generated": "module soc2 (", "label": "   output                      s0_ren,"}
{"generated": "    #10 rst = 0;    #200 $finish;    end    initial begin    $dumpfile(\"ring_counter_tb.vcd\");    $dumpvars(0, tb_ring_counter);   ", "label": "    #10 rst = 0;"}
{"generated": "\treg \t\t\t\t\t\t\trd_rst\t\t;reg \t\t\t\t\t\t\trd_en\t\t;wire\t[`DATA_WIDTH-1:0]\t\trd_data\t\t;wire\t\t\t\t\t\t\talmost_empty\t;", "label": "reg\t\t\t\t\t\t\t\trd_rst\t\t;"}
{"generated": "output Coffee_LCD_RS;\routput [7:0] Coffee_LCD_DATA;\r", "label": "output Coffee_LCD_RS;\r"}
{"generated": " pixel to be drawn                        // on the screen.        wire [9:0] pixel_y;   // y coordinate of the next pixel to be drawn                        // on the screen.        wire [3:0] red;      // red", "label": "  always @(posedge clk) begin"}
{"generated": "\ty_check = y_vals[i];", "label": "\tout <= x_vals[i];"}
{"generated": "        end else begin            case (right_player_input)                `MOVE_RIGHT: begin                    if (distance == 0) begin                        right_player_location = right_player_location + 1;                    end                    else if", "label": "        end else begin"}
{"generated": "\treg cpol_0;\r", "label": "\treg cpol_0;\r"}
{"generated": "    input                 M_DMEM_done_i,    input  [CLSIZE-1 : 0] M_DMEM_data_i,    output [CLSIZE-1 : 0] M_DMEM_data", "label": "    output [CLSIZE-1 : 0] M_DMEM_data_o,"}
{"generated": "    assign Cnotes[6]  = 489994;    assign Fnotes[6]  = 1499976;    assign Bnotes[6]  = 1179889;", "label": "    assign Cnotes[6]  = 454545;"}
{"generated": "\t\t\t\t\t\tpc_en  <= 1'bx;\r", "label": "\t\t\t\t\t\tpc_en  <= 1'bx;\r"}
{"generated": "\t\t\t\tif (last_change == KEY_CODES[8]) key_8  <= 1'b1;\t\t\t\tif (last_change == KEY_CODES[9]) key_9  <= 1'b1;\t\t\t\tif", "label": "\t\t\t\tif (last_change == KEY_CODES[8]) key_8  <= 1'b1;"}
{"generated": "            7'b0010011:                  control <= 8'b00100000;  // I type", "label": "            7'b0010011:"}
{"generated": "reg A=0; reg C=0;always @(estado_actual) begin    case(estado_actual)        1:  {A,C}=0;        2:  {A,C}=2", "label": "reg A=0; reg C=0;"}
{"generated": "module subBytes(outState,inState);\r", "label": "        8'h1a : subByteReg = 8'ha2;\r"}
{"generated": "        $display(\"Error: Your answer is A+B = %d + %d = %d, overflow = %d,\",A_in, B_in, Sum_o, overflow);        $display(\"---------------------------------------------------------------------------------\\n\");   ", "label": "        $display(\"Error: Your answer is A+B = %d + %d = %d, overflow = %d,\",A_in, B_in, Sum_o, overflow);"}
{"generated": "\t.start(start),\t.done(done),\t.x(x),\t.y(y));    initial begin        $fsdbDumpfile(\"SA_syn.fsdb\");        $fsdbDumpvars;    end    always #(", "label": "\t.start(start),"}
{"generated": "        // Mantenir    DataOut <= DataOut;endalways @(posedge Clk or negedge Rst_n) begin    // Reset    if (!Rst_n)        SerOut <= DataOut[SIZE", "label": "        DataOut <= DataOut;"}
{"generated": "module fetch (", "label": "        .pc_prev_address(pc_prev_address)"}
{"generated": "    assign counter = count;\r\rendmodule", "label": "    assign counter = count;\r"}
{"generated": "            data_reg[DATA_LENGTH-1:0]={data_reg[DATA_LENGTH],data_in};            end           end        end    else if (CPHA) begin        always@(negedge r", "label": "            data_reg[DATA_LENGTH-1:0]<=data_in;"}
{"generated": "    always @(posedge pulse2) begin", "label": "  always @(posedge pulse2 or negedge pulse1)"}
{"generated": "d_ff u1 (.din(s[0]),.clk(clk),.rst(rst),.dout(s[1]));", "label": "d_ff u1 (.din(s[0]),.clk(clk),.rst(rst),.dout(s[1]));"}
{"generated": "            current_state <= IDLE ;\r", "label": "            current_state   <= IDLE ;\r"}
{"generated": "i_bresp,    (* X_INTERFACE_INFO = \"xilinx.com:interface:aximm:1.0 M_AXI BVALID\" *)    input wire                     m_axi_bvalid,", "label": "    if (reset | ctrl_rst) begin"}
{"generated": "end", "label": "        ri_icmp_valid <= 'd0;"}
{"generated": "        if (~reset_n_i)            counter_data_for_max <= 0                                                     ;        else            if (start_i)                if (counter_data_for_max < number_of_data - ", "label": "        if (~reset_n_i)"}
{"generated": "    reg [BIT_WIDTH-1:0] RAM [SIZE-1:0];", "label": "    reg [BIT_WIDTH-1:0] RAM [SIZE-1:0];"}
{"generated": " ALUControl = 3'b000;  3'b001: ALUControl = 3'b001;  3'b010: ALUControl = 3'b010;  ", "label": " ALUControl = 3'b000; "}
{"generated": "                end                        STOP_BIT: begin                tx <= 1'b1;                if (baud_count == 13'd0) begin                    tx_state <= IDLE;                    tx_done <= 1'b1;", "label": "                    baud_count <= 13'd0;"}
{"generated": "endmodule", "label": " sky130_fd_sc_hd__conb_1 user_proj_example_8 (.VGND(vssd1),"}
{"generated": "`define MOVE_RIGHT 6'b100000 `define MOVE_LEFT  6'b010000`define WAIT     ", "label": "                left_player_health = left_player_health + 1;"}
{"generated": "// ", "label": "    assign notes2 [3]=151685; "}
{"generated": "    always @(*) begin", "label": "    always @* begin"}
{"generated": "_export),      // adc_pll_locked.export\t\t.clk_ts            (),                                //             ts.clk\t\t.ts_clk            (),                                //             ts.clk\t\t.ts", "label": "\t) sequencer_internal ("}
{"generated": "//---------------------------------------------------------------------------//-- Bloque 2. Circuito secuencial.//---------------------------------------------------------------------------reg[2:0] estado_actual=1;always @(posedge clk)\testado_actual <= estado", "label": "\t\t3:\tcase ({S2,S1})"}
{"generated": "      3'b010: Result = A & B;      3'b011: Result = A | B;      3'b100: Result = A ^ B;      3'b101:", "label": "      3'b010: Result = A & B;"}
{"generated": "    assign sw = (Op==6'b101011);", "label": "    assign sw = (Op===6'b101011);"}
{"generated": "// Repo Name", "label": "    reg JTAG_RUNTEST_GLBL;"}
{"generated": "  assign high = (counter == 5'b11111);  assign low = (counter == 5'b00000);endmodulemodule top_module(", "label": "  assign high = (counter == 5'b11111);"}
{"generated": "initial begin", "label": "initial begin "}
{"generated": "endmodulemodule ConvolutionStage1(", "label": "        $readmemb(\"C:\\\\Vivaldo\\\\Project\\\\image3.txt\", imageArray, 0, 48);"}
{"generated": "linha1[19:16]);\r\tLCD_LINE1+8:\tLUT_DATA\t<=\thex2char(linha1[15:12]);\r\tLCD_LINE1+", "label": "\tLCD_LINE2+9:\tLUT_DATA\t<=\thex2char(linha2[11: 8]); \r"}
{"generated": "module tb_siso_reg;", "label": "    #25 in = 0;"}
{"generated": "\talways @(posedge inclk0) begin", "label": "\talways @(posedge inclk0)"}
{"generated": "3];\r\t\t\ttemp=0;\r\t\t\twrite=0;\r\t\t\twrote_data4 = wrote_data4+1;\r\t\t\t\r\t\tend\r\tend\r\r\tend\r\r\t////////////////////////////////////////////////////////////////", "label": "\telse if((wrote_data3)/10 % 10 == 7 && ((vcount<182 && vcount>174 && hcount == 484)|| (vcount == 175 && hcount > 479 && hcount < 455)))begin\r"}
{"generated": "\t\t.S_AXI_ARVALID(s_axi_arvalid),\r\t\t.S_AXI_ARREADY(s_axi_arready),\r\t\t.S_AXI_RDATA(s", "label": "\t\t.S_AXI_ARVALID(s_axi_arvalid),\r"}
{"generated": "\t    end else begin\t\t\to_one_sec_tick <= 1'b0;\t\tend", "label": "\t\tend else begin"}
{"generated": "\t\t.PS2_CLK(PS2_CLK));\talways @(posedge clk) begin //\u6309\u9375\u6309\u4e0b\u6703\u6301\u7e8c\u70ba1\t\tif(been_ready && key_down[", "label": "\t\t.PS2_CLK(PS2_CLK),"}
{"generated": "            sum = a + b + c_in;  ", "label": "    {c_out, sum} = a + b + c_in;  "}
{"generated": "          3'b001:Data_out=8'b00000010;", "label": "          3'b001:Data_out=8'b00000010;"}
{"generated": "ry[3]), .CO(carry[4]), .S(DIFF[3]) );  ADDFHX1 U2_5 ( .A(A[5]), .B(n7), .CI", "label": "        .Y(n264) );"}
{"generated": "always @(posedge clock) begin", "label": "   assign nBUSRQ = request;"}
{"generated": "module ARM(    input CLK,    input Reset,    input [31:0] Instr,    input [31:0] Read", "label": "always@(*)begin"}
{"generated": "        reset <= 1;\r        #10 reset <= 0;\r    end\r\r    always begin\r        #5 clk <= ~clk;\r    end\r\r    always @(negedge clk) begin\r       ", "label": "        $readmemh(\"memfile.txt\", dut.block_3.Memory,0,71);\r"}
{"generated": "endmodulemodule top_module(", "label": "      out[3] <= 0;"}
{"generated": "endmodulemodule ALU(", "label": "\t\t\trunning = 1;"}
{"generated": "    // #100", "label": "    uart_tx_data = 8'b01000101;"}
{"generated": "    .c0        (vga_clk),", "label": "    .c0        (vga_clk)"}
{"generated": "// \t\t\t4'b0111: begin zero<=0; if(A-B>=32'h8000_0000) ALU_result<=32'b1; else", "label": "\t\t\tdefault: begin zero<=0; ALU_result <= A; end"}
{"generated": "//", "label": "  wire [(MAX_DIM*DW)-1:0] vec_a;"}
{"generated": "    Shift_data[Width:0] = {Data_in, 1'b0};", "label": "   Shift_data = {1'bx, Data_in};"}
{"generated": "31:0] soc_to_fpga_axilite_read_req_expect_value;\treg [31:0] soc_to_fpga_axilite_read_req_captured;", "label": "\treg \tfpga_axi_wvalid;"}
{"generated": "endmodulemodule top_module(", "label": "\t#(GRES_START);"}
{"generated": "module MakePositive #(", "label": "  MakePositive #(8) mp_inst2 ("}
{"generated": "// q1 <= ram[address1];     endendendmodule fir_shift_reg_RAM_AUTO_1R1W (         address0, ce0,    d0, we0,               address1,", "label": "        q1 <= ram[address1];"}
{"generated": "    assign addr_idx = addr_true[ADDR_W-1:2];", "label": "    assign addr_invalid = addr_true[ADDR_W] || (addr >= i_ubound);"}
{"generated": "always @(posedge clk) begin\r    if (i_reset == 1'b0) begin\r        reg_counter <= 0;\r        reg_out <= 1'b0;\r    end else if (i_", "label": "always @(posedge clk) begin : pwm_main\r"}
{"generated": "      else begin", "label": "      else if(!branch) begin"}
{"generated": "assign data_in_tmp = reset ? 0 : data_in;", "label": "assign data_in_tmp = reset ? 0 : data_in;"}
{"generated": "phi2),      .wclken(!h_cs_b & !h_rdnw),      .waddr(h_addr),      .wdata(h_data),      .rclk(!p_rd_", "label": "       rdata <= wdata;"}
{"generated": "                o_immediate = i_cur_instruction[31:12];", "label": "                o_immediate[31:12] = i_cur_instruction[31:12];"}
{"generated": "`timescale  1ns / 1ps", "label": "      end else begin"}
{"generated": "module Comparator10 (  input [9:0] input_value,  input [9:0] loaded_value,  output reg match);  always @(input_value, loaded_value) begin    if (", "label": "  output reg match"}
{"generated": "localparam G8_8 = 64'h66997338574231E1;localparam G9_1 = 64'h305281171F8", "label": "                               case(in_out_cnt)"}
{"generated": "   .i_Clock(i_clk),", "label": "   .i_Clock (i_clk),"}
{"generated": "a(wea_r),\r        .clkb(CLK),\r        .addrb(addrb),\r        .doutb(doutb)\r    );\r\r    assign red = doutb[7", "label": "    assign green = r_green;\r"}
{"generated": "wire [16:0] tmp;", "label": "    wire [16:0] tmp;"}
{"generated": "module Up_Dn_Counter_tb();", "label": "  if(A_tb > B_tb)"}
{"generated": "endmodule", "label": "   6'b001000: ALUControlSignal=3'b110;"}
{"generated": "\toutput wire Jump);", "label": "\toutput wire Jump"}
{"generated": " RO90_counter_out, RO91_counter_out;    (* DONT_TOUCH = \"true\" *) wire [15:0] RO92_counter_out, RO93_counter_", "label": "                PUF_OUT_REG[31] = 1'b0;"}
{"generated": "// Created by prof. Mingu Kang @VVIP Lab in UCSD ECE department", "label": "     or  G2  (out[i], w1[i], w2[i]);"}
{"generated": "mode = IMR          begin                data = IMR;            //write IMR to cpu                mode = 3'b010;          end        3'b011:                              //mode = status          begin                data =", "label": "              chosen_index = (3 * 2) + 1;             "}
{"generated": "endmodulemodule top_module(", "label": "    j: rotor_1_output = k;"}
{"generated": "output sum,  output carry);  assign sum = a ^ b;  assign carry = a & b;endmodulemodule full_adder (  input a,  input b,  input cin,  output sum,  output cout", "label": "  output sum,"}
{"generated": "output hs,hc;", "label": "output hs,hc;\r"}
{"generated": "        o_tdata<=0;        o_tvalid<=0;        o_tlast<=0;    end    else if(temp_ready)begin        o_tdata<=temp_data;       ", "label": "        o_tdata<=0;"}
{"generated": "`timescale 1ns / 1ps", "label": "\t\tout7 <= array[7];"}
{"generated": "\t\t\tWRITE_MEM = 4'd2,\r", "label": "\t\t\tDRAW = 4'd2,\r"}
{"generated": "module PWM_improved #(parameter n = 8)(", "label": "module PWM_improved #(parameter R = 8 , timer_bits = 15)("}
{"generated": "    output      wire                           o_Branch_D,\r", "label": "    output      wire                           o_Branch_D,\r"}
{"generated": "            AXIS_TVALID <= 0;", "label": "                delay     <= 200000000;"}
{"generated": "//====================================================================================    inputlabel": "    input                                   S_AXI_RREADY,"}
{"generated": "    clk_wiz_0 clock_synthesis (", "label": "    reg [7:0]buffer_r;"}
{"generated": "`timescale 1ns / 1ps", "label": "    demux_1x2 dem(.y(y), .sel(sel),.d0(d0),.d1(d1));"}
{"generated": "pulseCircuit enterPulse(Clock, Enter, enter_pulse);\rpulseCircuit changePulse(Clock, Change, change_pulse);\r\r", "label": "pulseCircuit ePulse(Clock, Enter, enter_pulse);\r"}
{"generated": "module fifo #(  parameter FIFO_SIZE = 2,  parameter W_WIDTH = 8)(  input clk, rst_n, ", "label": "      fifo_wr_en_ff <= 0;"}
{"generated": "module Four_One_mux_new #(parameter N = 32) (", "label": "module Four_One_mux_new #(parameter N= 32)(input [N-1:0] A, B, C, D, input [1:0] sel, output reg [N-1:0]  Y);"}
{"generated": "        if(rst_n == 0)", "label": "    if(rst_n == 0)"}
{"generated": "\t\tattempt2: Y = attempt2;\r", "label": "\t\tattempt2: Y = attempt2;\r"}
{"generated": "wire w1,w2;", "label": "assign out = sel? in1: in0;"}
{"generated": "    ,.ulpi_nxt_i(ulpi_nxt_i)\r    ,.ulpi_stp_o(ulpi_stp_w)\r    ,.ulpi_data_out_", "label": "    ,.ulpi_nxt_i(ulpi_nxt_i)\r"}
{"generated": "output gnt_0, gnt_1;", "label": "output gnt_0, gnt_1;"}
{"generated": "endmodulemodule top_module(", "label": "   test_vals[23] = 12'h0_0_0;"}
{"generated": "    #10 LED1_on = 1'b0;\r", "label": "    #10 LED1_on = 1'b0;\r"}
{"generated": "        .HEX0(HEX0),\r", "label": "        .HEX0(HEX0)\r"}
{"generated": "\tend\rendgenerate\r\rgenerate\r\tfor (i=0;i<32;i=i+8)\r\tbegin\r\t\tgaloisMultiplyBy3 gm3(colx3[(31", "label": "\t\tgaloisMultiplyBy3 gm3(colx3[(31-i)-:8],inVector[(31-i)-:8]);\r"}
{"generated": ":0]BRAM_OUT;    block_ram  Block_Rom(//        .graypixel(gray_out),//        .data_valid(one_byte_ready),//        .read_H(read", "label": "        .sobel_out(out_sobel),"}
{"generated": "wire [XLEN-1 : 0] zeros;", "label": "wire [XLEN-1 : 0] result_add, result_sll, result_slt, result_sltu;"}
{"generated": "\t.clock(clock), ", "label": "\t\t.clock(clock),"}
{"generated": "    wire [3:0] C;", "label": "    wire [3:1] c;"}
{"generated": ", this Software/Data//is protected by copyright law and international treaties.////The copyright notice(s) in this Software/Data does not indicate actual//or intended publication of this Software/Data.`timescale 1ns/1", "label": "buf I4(flgclk,dG);"}
{"generated": "\toutput\t  c1;\r", "label": "\toutput\t  c1;\r"}
{"generated": "\t\t\t\t\t\tif(LUT_INDEX<LUT_SIZE)\r", "label": "\t\t\t\t\t\tmLCD_ST\t<=\t3;\r"}
{"generated": "\tPC <= PC + 4;", "label": "\tif (((EX_MEM_IR [31:26]== beqz)&& ( EX_MEM_cond == 1))||"}
{"generated": "    plugboard16: out = plugboard17;\r\tplugboard17: out = plugboard16;\r\tplugboard18: out = plugboard19;\r\tplugboard19: out =", "label": "\tplugboard16: out = plugboard17;\r"}
{"generated": "    reg [9:0] adc_conv_time_cnt;    // ADC Conversion Time\uc5d0 \ub530\ub984    reg [9:0] adc_acq_time_cnt", "label": "    wire adc_conv_flag;"}
{"generated": "endmodulemodule top_module(", "label": "        .S_AXI_AWPROT(s_axi_awprot),"}
{"generated": "core-generator/all_stages/alu.py:121\" *)  wire \\$172 ;  (* src = \"/home/ubuntu/Chipcron-core-generator/all_stages/alu", "label": "    (* src = \"/home/ubuntu/Chipcron-core-generator/Wrapper_class.py:68\" *)"}
{"generated": "// register_files rf", "label": ".PC_out(instructionTop));"}
{"generated": "            esti_bits_1[10:4] = temporarycode[14:8]; \r", "label": "            esti_bits_1[10:4] = temporarycode[14:8]; \r"}
{"generated": "            r_SM_Main     <= IDLE;\r            o_TX_Active   <= 1'b0;\r          end\r        end // case: TX_STOP_BIT\r      \r      endcase\r    end\r", "label": "            r_SM_Main     <= IDLE;\r"}
{"generated": "_IR[6:0]==BR_TYPE)begin    NPC = EX_MEM_ALUOUT;    IF_ID_IR <=MEM[NPC];    IF_ID_NPC <=NPC+32", "label": "    ADD:EX_MEM_ALUOUT <= ID_EX_A + ID_EX_B;"}
{"generated": "\t\tInterpolation_top Interpolation_top_inst(", "label": "Interpolation_top  Interpolation_top_inst"}
{"generated": "        businterface_read = cpu_read;", "label": "        businterface_read = cpu_read;"}
{"generated": "endmodule", "label": "endmodule"}
{"generated": "endmodulemodule top_module(", "label": "endmodule"}
{"generated": "`include \"alu.vh\"module alu    (        input t_alu_op op,        input t_reg reg2, reg3,        input carry_in,        output t_reg result,        output reg carry", "label": "                temp_result = { temp_reg2[0], 1'b0, temp_reg2[31:1] };"}
{"generated": "\t\t\tif(cnt_K3 < 2'd2)", "label": "\t\t\tif(cnt_K3 == 2'd2 && cnt_K3_on ==1)"}
{"generated": "\t\t\t\tir_val <= 8'b00000000;", "label": "\t\t\tir_val = 8'b0;\t"}
{"generated": "endmodule", "label": "            ICW3: begin"}
{"generated": "//", "label": "\t\t\t\t\t\t\t\t\tRec_cnt<= 27'd0;"}
{"generated": "module demux_1x2(", "label": "module demux_1x2("}
{"generated": "// iCache constants.`define IOFFSET_BIT_PRECISION `WORD_SIZE // we can access the memory every n bits, where n is the offset bit precision. Example: 8 means we can access the memory byte", "label": "`define IINDEX `INDEX_SIZE+`IOFFSET_SIZE-1:`IOFFSET_SIZE"}
{"generated": "    output reg [7:0] addr_data,", "label": "    output [7:0] addr_data,"}
{"generated": "// );", "label": "        .i_addr             (w_alu_result),"}
{"generated": "always @(posedge clk_50m) begin", "label": "always @(posedge clk_50m) begin"}
{"generated": "parameter CMD_INIT = 4'd0;", "label": "parameter WRITE\t\t\t= 4'b0000;"}
{"generated": " PHY_36 (); sky130_fd_sc_hd__decap_3 PHY_37 (); sky130_fd_sc_hd__decap_3 PHY_38 (", "label": " sky130_ef_sc_hd__decap_12 FILLER_0_21_125 ();"}
{"generated": "end", "label": "  #300 $finish;"}
{"generated": ".port_clk3 = \"PORT_UNUSED\",\t\taltpll_component.port_clk4 = \"PORT_UNUSED\",\t\taltpll_component.port_clk5 = \"", "label": "\t\taltpll_component.port_extclk3 = \"PORT_UNUSED\","}
{"generated": "        // 0,", "label": "        {A, B, C, D} <= 0; "}
{"generated": "        flush_d = (((rs1_d == rd_e) || (rs2_d == rd_e)) && result_src_e[0]) ? 1 : 0;\r", "label": "    stal_f = lw_stall;\r"}
{"generated": "\tSync_FIFO.overflow_checking\t\t\t= \"OFF\",\r\tSync_FIFO.underflow_checking\t\t= \"OFF\",\r\tSync_FIFO.use_eab\t\t\t\t\t= \"ON\";\r\rendmodule", "label": "\tSync_FIFO.overflow_checking\t\t\t= \"OFF\",\r"}
{"generated": "\t\toutput [4:0] SEG_SEL;", "label": "\t\toutput [4:0] SEG_SEL;"}
{"generated": "        if (we) RAM[waddr] <= wdi;        if (re) rdo <= RAM[raddr];    end", "label": "        if(re) rdo <= RAM[raddr];"}
{"generated": "module atm(", "label": "module authentication("}
{"generated": "initial begin", "label": "initial h_count = 0;"}
{"generated": "_alu_reg_2_ ( .D(w1[2]), .CK(clk), .R(n1), .Q(reg_alu[2])         );  DFFRPQ_X2M", "label": "  DFFRPQ_X2M_A9TR reg_out_reg_9_ ( .D(mul[9]), .CK(clk), .R(n1), .Q(d[9]) );"}
{"generated": "        o_Branch_E=~i_sign_E;\r    end \r    blt:\r    begin\r        o_Branch_E=i_sign_E^i_LTU;\r    end", "label": "        o_Branch_E=i_carry_E;\r"}
{"generated": "        Z[1] = (Ain[7] & Bin[7] & ~out[7]) | (~Ain[7] & ~Bin[7] & out[7]);", "label": "            Z[1] = 1'b1;"}
{"generated": "\tend\rend\rendmodule\r", "label": "\t\tif (f2 & f1 & f3 & f0)\r"}
{"generated": "z_tb = $random;\t#10;end\t$finish;endendmodulemodule top(", "label": "\tz_tb = $random;"}
{"generated": "`timescale 1ns / 1ps", "label": "initial begin"}
{"generated": "    initial begin\r", "label": "    integer i, j, k;\r"}
{"generated": "\t\t.divideby16(divideby16),\r\t\t.rst(rst)\r\t);\r\r\tinitial begin\r\t\t// Initialize Inputs\r\t\tclk = 0;\r\t\tr", "label": "\t\t.divideby16(divideby16),\r"}
{"generated": "\t\td[9] <= (D[9:0]);\t\td[8] <= 0;\t\td[7] <= (~D[29:20] + 1);\t\td[6] <= ", "label": "\t\td[9] <= (~D[29:20] + 1);"}
{"generated": " *****************************************************************************/\r\r/*****************************************************************************\r *                             Sequential logic                              *\r", "label": " *****************************************************************************/\r"}
{"generated": "\t\tif (control == 4'b0000) begin\r", "label": "\t\tcase(control)\r"}
{"generated": "//         end else if (test_instruction[31:26] == 6'", "label": "        $display(\"=========================================================================\","}
{"generated": "    always @(*) begin", "label": "        lreg <= A & ~D | ~(C & D) | (A ^ B);"}
{"generated": "        begin", "label": "        for (out = 0; out < IN_SIZE && in[out] !== 1; out = out + 1) begin"}
{"generated": "          11'h041: data = 8'b00000000; //          11'h042: data = 8'b00000000; //          1", "label": "endmodule  "}
{"generated": "\t\tdelay;", "label": "\t\ttip <=1'b1;\r"}
{"generated": "\t\t\t\tif(ld_state && !fifo_full && !packet_valid)\r", "label": "\t\t\t\tif(rst_int_reg)\r"}
{"generated": "endmodulemodule PPU_Control_Unit (", "label": "\t\t\tmem_se_reg = 1'b0;"}
{"generated": "\t\t4'd7 : {a, b, c, d, e, f, g} = ~7'b1110000;\t\t4'd8 : {a, b, c, d, e", "label": "\t\t4'd7 : {a, b, c, d, e, f, g} = ~7'b1110000;"}
{"generated": "w <= maximum2;        else                                                   ram_data_w <= 8'd0;        ram_addr_w <= ram_addr_r;    end        else begin        ram_en <= 0;        ram_wea", "label": "              end_MP2 <= end_MP2;end"}
{"generated": "module frame", "label": "    .ulpi_stp(ulpi_stp),"}
{"generated": "\tinitial begin\r", "label": "\tinitial begin\r"}
{"generated": "//             haddr_i", "label": "        if ((inc_bt_addr[addr_wrap_bloc] != bt_addr[addr_wrap_bloc]) && bt_wrap) begin"}
{"generated": "module UniversalShiftRegister_tb;", "label": "  initial begin"}
{"generated": "endmodule", "label": "        .start_i(start_i)                                                                                       ,"}
{"generated": "    rom rom(clk_in, pc_bits, rom_data);", "label": "\twire acu_zero;"}
{"generated": "// Module Name: Mod_", "label": "Cout <= Cout+ 1;"}
{"generated": "                addr <= i_addr;\r", "label": "                addr <= i_addr;\r"}
{"generated": "always @ (posedge RESET or posedge CLK)", "label": "reg\t\t\tsw_on;"}
{"generated": "//        duty", "label": "    .duty(duty),"}
{"generated": "endmodulemodule top();", "label": "    wire JTAG_TRST_GLBL;"}
{"generated": "`timescale 1ns / 1psmodule ForwardingUnit(ForwardA,ForwardB,ExMemRead,ExMemRegWrite,IDExRegRs1", "label": "\t\t\t\t\tLui  \t\t= 1'b1;"}
{"generated": "  .SLAVE_ADRESS(SLAVE_ADRESS),", "label": "    .SLAVE_ADRESS(SLAVE_ADRESS),"}
{"generated": "\toutput\t\t    [31:0]\t\tDRAM_DQ,", "label": "\toutput\t\t     [1:0]\t\tDRAM_BA,"}
{"generated": "module top(", "label": "\tdivide #(.WIDTH(32),.N(1200000)) U1 ( "}
{"generated": "        .o_stall    (SMEM_stall),\r        .i_offset   (mem_stack_offset),\r        .i_ubound   (mem_inst_offset),\r        .i_cache   ", "label": "        .o_stall    (SMEM_stall),\r"}
{"generated": "endmodulemodule mux2X1(in0, in1, sel, out);  input in0, in1, sel;  output out;  wire out;  assign out = sel ? in1 : in0;end", "label": "mux2X1  ins_25 (.in0(x[5]),.in1(x[7]),.sel(ctrl[1]),.out(y[5]));"}
{"generated": "\t\t\tr_cnt_val <= {P_COUNT_BIT{1'b0}};", "label": "\t\t\tr_cnt_val <= {P_COUNT_BIT{1'b0}};"}
{"generated": "\tassign neg = Flags[3];\r", "label": "\tassign {neg, zero, carry, overflow} = Flags;\r"}
{"generated": "// Verilog HDL NetList //   timeStamp 2014 6 25 15", "label": "module AO222 ( A2 , C1 , A1 , C2 , B1 , B2 , O );"}
{"generated": "module bcdtobinary(input [13:0] Y, output [7:0] D);//1", "label": "add3 C13(T[38:35], Y[8:5]);"}
{"generated": "endmodule", "label": "        sub_data_valid = 0                                                                                      ;"}
{"generated": "\t\t\t\tend else if (bird_y == 0) begin\r", "label": "        end else if (skip == 0) begin\r"}
{"generated": "\tinput [2:0] func3;", "label": "\tinput [14:12] func3;"}
{"generated": " || i2c_cs==STOP_TMP || i2c_cs==STOP || i2c_cs==FINISH) sda_out<=1'b1;     else if (i2c", "label": "           else i2c_ns=ADDR1_B;"}
{"generated": " :  0   ;         ?   1   :  ?  :  1   ;        0   0   :  ?  :  0   ;        0   1   :  ?  :  1   ;    endtable", "label": " * udp_mux_4to2: Four to one multiplexer with 2 select controls"}
{"generated": "    always @(posedge CLK or negedge RST) begin\r        if(~RST) begin\r            MEM_WRITE <= 0;\r            MEM_READ <= 0;\r            tx_valid <= 0", "label": "    integer I ;\r"}
{"generated": "        pb_in_delay <= pb_in;", "label": "\t\tif (pb_in == 1'b1 && pb_in_delay == 1'b0) begin"}
{"generated": "`ifndef _V_SYNC_`define _V_SYNC_module v_sync #(    parameter V_RES = 1024,    V_FRONT_PORCH = 1,    V_SYNC", "label": "            h_sync_signal <= 1'b0;"}
{"generated": "        checksum_w\t<= checksum_reg;\r", "label": "\t\tif(datavalid)\r"}
{"generated": "module Top (", "label": "\t\t\tdata_memory[9] <= 8'b0;"}
{"generated": "assign C[3] = G[2] | (P[2]&G[1]) | (P[2]&P[1]&G[0]) | (P[2]&P[1]&P", "label": "assign C[3] = G[2] | (P[2]&G[1]) | (P[2]&P[1]&G[0]) | (P[2]&P[1]&P[0]&C[0]);\r"}
{"generated": "`include \"../../rtl/cpu7b/rtl/defines.vh\"module soc2_top(   input            clk,   input            resetn", "label": "   wire [`Lbresp      -1 :0] cpu_bresp;"}
{"generated": "always @(posedge clock or negedge reset)\r\tbegin\r\t\tif(reset == 1'b1)\r\t\t\tif(fen == 1'b1)\r\t\t\t\tif(ct[3:0] == 4'", "label": "assign xten  = (ct[3:0] == 4'b1001) ? 1'b1 : 1'b0;\r"}
{"generated": "\t\tif (clken) begin", "label": "\t\tif (clken) begin"}
{"generated": "//  up_down_counter dut (.clk(clk), .reset(reset), .up(up), .ctrl(ctrl", "label": "  wire [31:0] counter;"}
{"generated": "module tb_processor;", "label": "\t\tinput\t[31:0]\twr_data"}
{"generated": "//", "label": "reg [DataMemory_WIDTH - 1 : 0] Data_mem [DataMemory_DEPTH - 1  : 0] ;"}
{"generated": "clk)din=j; endtask\rtask read; begin @(negedge clk)re=1'b1; end endtask\rinitial\rbegin\rinitialize;\rreset;\r#10;\rwrite(", "label": "clk)din=j; endtask\r"}
{"generated": "//        3'b100: data_out=8'b11101111;        3'b101: data_out=8'b11011111;        ", "label": "        3'b100: data_out=8'b11101111;"}
{"generated": "module CU(", "label": "        4'b0101:out=a+b;"}
{"generated": "st_write: begin  next = st_wenable;  endst_wenable: begin if(valid == 0)next = st_idle;else if(valid==1 && hwrite == 0)next = st_", "label": "st_write: begin"}
{"generated": "  wire clk1_buf;", "label": "    assign clk_out = sel ? clk2 : clk1;"}
{"generated": "parity_done <=1'b0;\r\rend\r\rend\r\rend\r\rend\r\ralways @(posedge clk)\r\rbegin\r\rif(!rst)\r\rlow_pkt", "label": "parity_done <= 1'b0;\r"}
{"generated": "\talways @(posedge clk) begin\r", "label": "\talways @(posedge clk) begin\r"}
{"generated": "Bx_B_single row_2 (\r    .clk(clk), .rst(rst),\r    .in(in_2),\r    .out(out_2)\r);\r", "label": "Bx_B_single row_2 (\r"}
{"generated": "        8'h01 : subByteReg = 8'h7c;\r", "label": "        8'h01 : subByteReg = 8'h7c;\r"}
{"generated": "//parameter const0_644444 = 9'b0_10100100;parameter const0_6444444 = 9'b0_1010010", "label": "parameter const0_68889 = 9'b0_10110000;"}
{"generated": "    mem[8] = 32'd8;    mem[9] = 32'd9;    mem[10] = 32'd10;    mem[11] = 32'd1", "label": "    mem[8] = 32'd8;"}
{"generated": "module full_adder (", "label": "module full_adder("}
{"generated": "        clk_cnt<=3'd0;", "label": "          clk_cnt<=3'd0;"}
{"generated": "    input [n-1:0] x,y,", "label": "       input [n-1:0] x,y,"}
{"generated": "endmodulemodule top();", "label": "    assign AXI_BRESP = ASHI_WRESP;"}
{"generated": "//        if(", "label": "    if(!rst_n) begin"}
{"generated": "        x3 <= x3 + 3;\r        x4 <= x4 + 4;\r    end\rend\r\ralways\rbegin\r\tclk = 1;\r\t#5;\r\tclk = 0;\r\t#5", "label": "        x3 <= x3 + 3;\r"}
{"generated": "    input [n-1:0] duty,", "label": "    input [n-1 :0 ] duty,"}
{"generated": "// SEND_ADDR2 = 5'h06,\t\t\t\t\t SEND_ADDR1 = 5'h07,\t\t\t\t\t SEND_ADDR0 = 5'h08,\t\t\t\t\t SEND_READ  = 5", "label": "\t\t\t\t\t SEND_ADDR2 = 5'h06,"}
{"generated": "`timescale 1ns / 1ps", "label": "         array[c] = array[position];"}
{"generated": "    AND UUT (", "label": "        #5 clk = ~clk;"}
{"generated": "always@(posedge Trigger)", "label": "    always@(posedge Trigger)"}
{"generated": "    output [1:0] ALUControl,    output PCSrc);", "label": "    output [1:0] ALUControl,\t"}
{"generatedlabel": "  output wire                        arready,"}
{"generated": "    Song song_ctl(clk, en, song, octave);", "label": "wire [`NOTE_BITS-1:0] note;"}
{"generated": "        rd_ptr <= rd_ptr + 1;   end end always @ (posedge wr_clk) begin   if (reset) begin      wr_ptr <= 5'b00000;   end  ", "label": "      rd_ptr <= rd_ptr + 1;"}
{"generated": "    always @ (posedge r_clk,r_rst)\r", "label": "    always @( posedge r_clk,r_rst )\r"}
{"generated": "endtask task read; begin we=1'b0;re=1'b1;endendtask initialbegininitialize;reset;#10;write;#10;read;#10;$finish();", "label": "endtask task read; begin re=1'b1; we=1'b0;"}
{"generated": "    reg [1:0] state;", "label": "    localparam N = 3;"}
{"generated": "module led_top(", "label": "module led_top("}
{"generated": "\t\t  #10;", "label": "\t\t#10; a0 = 0; b0 = 0; ci0 = 1;"}
{"generated": "module player_tb;", "label": "    player_x = 200;"}
{"generated": "new <= 256'b0;\r            dcache_cacheline_new <= 256'b0;\r            icache_rdata_buffer <= 256'b0;\r            icache_wdata", "label": "                        arlen <= 4'hf;\r"}
{"generated": "\t.num1\t(a_cube),\t.num2\t(y_calc_val),\t.res \t(y_mult_a_cube));assign y_val = y_calc_val;endmodulemodule", "label": "\t.num1\t(a_cube),"}
{"generated": "                    n_state <= delay_2;\r\r                else\r                    n_state <= run;\r            end\r\r            delay_2 :\r            begin\r                if (delay_2_flag)\r                    n_state <=", "label": "                            mosi_reg <= mosi_reg;\r"}
{"generated": "    end", "label": "     round_key[i]= key_register[0:63];"}
{"generated": "    output reg [31:0] yazmac_obegi [0:31],", "label": "    output [31:0] program_sayaci,"}
{"generated": "        if (RST == `BSV_RESET_VALUE)          begin             D_OUT <= `BSV_ASSIGNMENT_DELAY {p1width {1'b0}} ;          end // if (RST", "label": "        reg deqerror, enqerror ;"}
{"generated": "        .hit        (hit             ),\r        .lru        (lru             )\r    );\r\r    cache_data_v5 u_cache_data(\r    \t.clk        (clk             ),", "label": "        .hit        (hit             ),\r"}
{"generated": "_AXI_AR_PROT;    wire [3:0] SysCtrl_SS_AXI_to_AXI_AR_QOS;    wire [2:0] SysCtrl_SS_AXI", "label": "    assign SysCtrl_SS_Reset_SS_2_to_bus_1_reset = SysCtrl_SS_reset_ss_2;"}
{"generated": "D3110E6;localparam G2_6 = 512'h2189F593A172F564706B0E63888492", "label": "localparam G6_1 = 512'h975CED50A31C625C28A5DCB0806EA8B42655F38F9F3CC859D83F0DB9670A51B20C3DBCAF1BD42C03D303B43FA30534AEAB5FB9A591B34E6C758D881429F63BD9;"}
{"generated": "\ttop_module_counter DUT(.Data_in(Data_in), .RD_Ext(RD_Ext), .WR_Ext(WR_Ext), .Clock(Clock), .Clock_L", "label": "\treg [15:0] search_count = 16'b0;"}
{"generated": "                end", "label": "                    if (!debounced_switch_song) begin"}
{"generated": "// if(cnt != 18'hfffff)                cnt <= cnt + 1;             end         assign  key_pulse = (cnt == 18'hfffff)?key_edge:1'", "label": "                cnt <= cnt + 1'h1;"}
{"generated": "mem_8_eof(user_r_mem_8_eof),    .user_r_mem_8_open(user_r_mem_8_open),    .user_w_mem_8_", "label": "   always @(posedge bus_clk)"}
{"generated": "endmodulemodule x74151(", "label": "    En=0; S[2:0]=3'b101; D[7:0]=8'b00100000;"}
{"generated": "assign\tLCD_RW\t=\t1'b0;\rassign\tLCD_RS\t=\tiRS;\r\r/////////////////////////////////////////////\r//\tLCD_EN\ralways@(posedge iCLK", "label": "assign\tLCD_DATA\t=\tiDATA; \r"}
{"generated": "assign memwrite = sw;\rassign branch = beq;\rassign branchNotEqual = bne;\rassign aluop1 = beq;\rassign aluop2 = bne;\rassign jump = j;\rend", "label": "assign memwrite = sw;\r"}
{"generated": "  .Load          (load),", "label": "    .Load          (load),"}
{"generated": "        always @(posedge wb_clk, posedge wb_rst) begin", "label": "        always@(posedge wb_clk, posedge wb_rst) begin"}
{"generated": "    input reset_n,", "label": "    input reset_n,"}
{"generated": "\t3'b111: begin\r", "label": "\t3'b111: begin less = a+1+(~b);\r"}
{"generated": "module top_tb();", "label": "        start_i = 1                                                                                             ;"}
{"generated": "        CRC4_code[2] = temp_data[2];\r", "label": "        CRC4_code[2] = temp_data[2];\r"}
{"generated": "endmodule", "label": "always @(opcode,r1,r2) begin"}
{"generated": "\t.res\t(result2));initial begin #10;$display(\"Test 1: %d\", result1);$display(\"Test 2: %d\", result2);endendmodule", "label": "\t.res\t(result2)"}
{"generated": "module Extend(", "label": "            flag[2] = 1;"}
{"generated": "module fifo_mux_16_1 (out, sel, in0, in1, in2, in3, in4, in5, in6, in7, in8, in9, in10,", "label": "  input  [simd*bw-1:0] in11;"}
{"generated": "    assign c[0] = g0 | (p0 & Cin);  assign c[1] = g1 | (p1 & c[0]);  assign c[2] = g2 | (p2 & c[", "label": "  assign c[0] = g0 | (p0 & Cin);"}
{"generated": "    else if(read_available_M) begin    data_out_M<=data_tmp_M;    end", "label": "    else if(read_available_M==1) "}
{"generated": "    //     rst_n = ", "label": "        forever #(CLK_PERIOD/2) clk = ~clk;"}
{"generated": "\t.clk\t\t(clk\t\t),", "label": "\t.clk\t\t\t(clk\t\t),"}
{"generated": "//    reg h", "label": "  output wire visible, "}
{"generated": "err_val;\rwire signed [31:0] r2_err_val_d1, r3_err_val_d1;\rwire signed [31:0] r2_err_val_d", "label": "    .in_2(y_tf_out_2),\r"}
{"generated": "xt54,\r    output reg [5:0] rotorB_nxt55,\r    output reg [5:0] rotorB_nxt56,\r    output reg [5:0] rot", "label": "        rotorB_nxt17 =  rotorB17;\r"}
{"generated": "//==============================================================\r//======Data Generate\rreg [15:0] pts;\ralways @(posedge CLK_I or posedge RST_I) begin\r    if (RST_I)", "label": "reg [10:0] sofCounts;\r"}
{"generated": "//        end", "label": "    case(cur_state)"}
{"generated": " #(period/2) clk = ~clk; end initial begin clk = 0; rst_n = 1; Data_in = 16'hABCD; #382; // Shift 16", "label": " #(period/2) clk = ~clk;"}
{"generated": "\tassign out = 1'b0;\r\t\rendmodule\r\rmodule Constant1(\r\toutput out\r);\r\r", "label": "\tassign out = 1'b0;\r"}
{"generated": "    next_prbs31[ 1] = in[ 0] ^ (in[28] ^ in[25]);\t\tnext_prbs31[ 0] = in[31] ^", "label": "\t\tnext_prbs31[ 1] = in[ 0] ^ (in[28] ^ in[25]);"}
{"generated": "    reg [2:0] state1;", "label": "    reg [2:0] state1 = player1S0;"}
{"generated": "// bram behavior code (can't be synthesis)// 13 wordsmodule bram13 (    CLK,    WE,    EN,    Di,    Do,   ", "label": "            if(WE[2]) RAM[A>>2][23:16] <= Di[23:16];"}
{"generated": "        clk = 0;\r        reset = 1;\r        up_down = 0;\r        #10 reset = 0;\r        #10 up_down = 1;\r        #10 up_down = 0", "label": "        $monitor(\"M= %b Time=%0t, Counter=%b\", up_down, $time, counter);\r"}
{"generated": "        \t\tcounter <= 0;\r    \telse\r        \t\tcounter <= next;\r    \r\t// Next Counter Value Logic\r\tassign next = (counter == M) ? 0 : counter + 1;\r    \r\t//", "label": "        \tcounter <= 0;\r"}
{"generated": "`timescale 1ns / 1psmodule DPBRAM #(                    parameter integer DWIDTH = 16,              // DPRAM Data                    parameter integer", "label": "            ram[addr1] <= din1;"}
{"generated": "(posedge clk_i) begin    for (i = 0; i < N; i = i + 1) begin        if (i != core_id_bin) begin            reservation_addr[i] <= res", "label": "    for (i = 0 ; i < N ; i = i + 1) begin"}
{"generated": "//`include \"../rtl/defines.vh\"`timescale 1ns / 1ps//`timescale", "label": "\t                 $display(\"*      *        * * * *       *       *          *\");"}
{"generated": "//        i2c_exec", "label": "        flow_cnt   <= 2'b0;"}
{"generated": "    input wire clk_i,", "label": "    input wire clk_i, "}
{"generated": "\t #10 X= 16'b0000000000000001;\t Y= 16'b0000000000000010", "label": "\t #20 X=70000;"}
{"generated": "    .B                       ( B   ),", "label": "    .B                       ( B   ),"}
{"generated": "endmodule", "label": "2'b10 : baud_rx_out = baud_tick_19200bps;"}
{"generated": "_IR[6:0]==BR_TYPE) begin    NPC=EX_MEM_ALUOUT;    IF_ID=MEM[NPC];    end    else begin    NPC<=NPC+32", "label": "SH_TYPE:begin"}
{"generated": "(rotorA[57]),\r    .rotorA58(rotorA[58]),\r    .rotorA59(rotorA[59]),\r    .rotorA6", "label": "    .rotorB14(rotorB[14]),\r"}
{"generated": "\tinput Select;\r\toutput Output;\r\twire Wire;\r\r\tassign Wire = Input1 & Input2;\r\tassign Output = Select ? Wire : Input1 ^ Input2;\r\rendmodule\r", "label": "\tinput Select;\r"}
{"generated": "  input  [SIZE-1:0] state ;", "label": "  input  [SIZE-1:0] state;"}
{"generated": "    assign alu_op[0] = (btnr & ~btnl) | (~btnr & btnl & btnc);", "label": "xnor(btnr_XNOR_btnc,btnr,btnc);"}
{"generated": "RE #(    .INIT(1'b0))     \\led_output_reg[5]        (.C(clk_IBUF_BUFG),        .CE(1'b1),        .D", "label": "       (.C(clk_IBUF_BUFG),"}
{"generated": " assign cin = (select==1'b0) ? 1'b0 : 1'b1;", "label": " assign cin  =(select==1'b0) ? 1'b0 : 1'b1;"}
{"generated": "                    end else begin                    result_r = alu1_i / alu2_i;                    end                end                5'b10101:   //DIVU                begin                    if(alu2_i == ", "label": "                    end else if(alu1_i[31] == 1'b1 && alu2_i == -32'h1) begin "}
{"generated": "    input clk,", "label": "x = 1; y = 0; cin = 0;"}
{"generated": "                // \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd", "label": "                    serialSignalCount_ctr <= serialSignalCount_ctr + 1;"}
{"generated": "`timescale 1ns/1ps", "label": "localparam LW   = 4'd7;"}
{"generated": "        forever begin        repeat(divider_value)         @(posedge wb_clk_in);        cpol_0 = 1'b0;        end        end                initial begin        wb_rst = 1", "label": "        @(posedge wb_clk_in)"}
{"generated": "        B = 4'b0110;", "label": "        B = 4'b1111;"}
{"generated": "", "label": "            if (le_pc && le_npc) pc_reg <= npc_reg;"}
{"generated": "`timescale 1ns/1ns", "label": "\t.num1(re2),"}
{"generated": "_r13_q;\r    assign x14_a4_w  = reg_r14_q;\r    assign x15_a5_w  = reg_r15_q;\r    assign", "label": "        5'd10: ra0_value_r = reg_r10_q;\r"}
{"generated": "block.sdf\", uut.\\gpio_control_in_1a[5] ) ;\t\t\t$sdf_annotate(\"../../../caravel/sdf/gpio_control_block.sdf\", uut", "label": "\t\t\trepeat (1000) @(posedge clock);"}
{"generated": "endmodule", "label": "endmodule"}
{"generated": "    input [`DATA_LEN-1:0] i_op1,", "label": "    input [`DATA_LEN-1:0] i_op1,"}
{"generated": "\t\t\t\t\tset_valid <= 0;\r", "label": "\t\t\t\t\tset_valid <= 0;\r"}
{"generated": "reg\t\t\t[2:0]\ts_ps2_receiver;\r\r/*****************************************************************************\r *                         Finite State Machine(s)                           *\r *****************************************************************************/\r\ralways @(posedge clk)", "label": "reg\t\t\t[2:0]\ts_ps2_receiver;\r"}
{"generated": "    wire sum, carry;", "label": "    wire sum, carry;"}
{"generated": "con_process con_process_inst(", "label": " con_process con_process_inst("}
{"generated": "    assign CarryOut = tmp[16]; // Carryout flag    always @(*)    begin        case(ALU_Sel) // Write the logic for Arithmetic and Logic Unit        endcase    endendmodule", "label": "    assign tmp = {1'b0,A} + {1'b0,B};"}
{"generated": "//\tLCD_LINE1+4:\tLUT_DATA\t<=\t9'h16E;\tLCD_LINE1+5:\tLUT_DATA\t<=\t9'h120;\t", "label": "\tLCD_LINE1+4:\tLUT_DATA\t<=\t9'h172;"}
{"generated": "wire G0,G1,G2,G3,G4,G5,G6,G7,G8,G9,G10,G11,G12,G13,G14", "label": "wire y1,y2,G1,G2;\r"}
{"generated": " initial #50 $finish;\rendmodule \r", "label": " initial #50 $finish;\r"}
{"generated": " n$2, n$3, n$4, n$5, n$6, n$7, n$8, n$9, n$10, n$11, n$12, n$1", "label": "  and U$1(Z, A2, A1);"}
{"generated": "//if (counter_tb == 5'b10000)      $display (\"test case 3 is passed and the counter = %0d at time\",counter_tb,$time);    else      $display (\"test case ", "label": "    if (counter_tb == 5'b01110) "}
{"generated": "            case(digit)", "label": "            led7_an_o <= ~(1 << digit);"}
{"generated": "endmodule", "label": "              out = in1^in2;"}
{"generated": "    .HRESETn\t            (HRESETn ),\r", "label": "    .HRESETn\t            (HRESETn ),\r"}
{"generated": "endmodule", "label": "    #100 $finish;"}
{"generated": "//      end", "label": "        counterclkout <= 2'b00;"}
{"generated": "endmodule", "label": " output [DW-1:0] rdata"}
{"generated": "\t\t\t\t2'b01 : SEG_DATA = 8'b00000110;\r", "label": "\t\t\t\t2'b01 : SEG_DATA = 8'b00000110;\r"}
{"generated": "  VCounter counter_inst (", "label": "  Comparator11 comparator800_inst ("}
{"generated": "    reg [1:0] state;    reg [1:0] pre_state;    reg [1:0] next_state;    reg [1:0] pre_note;    reg [1:0] next", "label": "    parameter PLAY = `PLAY;"}
{"generated": "//#10 RN  = ", "label": "clk = 1'b1;"}
{"generated": "module islemci (", "label": "assign oku_veri = oku_veri_cmb;"}
{"generated": "// assign xored_y", "label": "   output [n-1:0] s,"}
{"generated": "\", uut.\\gpio_control_in_1a[6] ) ;\t\t\t$sdf_annotate(\"../../../caravel/sdf/gpio_control_block.sdf\", uut.\\gpio_", "label": "\t\t.flash_csb(flash_csb),"}
{"generated": "    DUT.alu_result, DUT.imm_extended, DUT.write_data, DUT.PCSrc, DUT.setAddress, DUT.MemReadData);\r\r    #10 reset", "label": "    DUT.alu_result, DUT.imm_extended,\r"}
{"generated": "        C_PC,        INST    );   Vr_IMM_GEN Imm_Generator     (        INST,        Imm_Exten    );   Vr_Reg_File Reg_File     (        CLK,", "label": "        C_PC                   , "}
{"generated": "\tparameter state_rd_positive = 1'b1;\r", "label": "\tparameter state_rd_positive = 1'b1;\r"}
{"generated": "$dumpvars(0,hello_tb);", "label": "  #5 RN = 1'b0;"}
{"generated": "    r_x_t_1 <= x_i;", "label": "      r_x_t_2_temp  <= r_x_t_2;"}
{"generated": "mem[i]=16'b0;\r", "label": ") mem[i]=0;\r"}
{"generated": "`include \"global.v\"module mesh_tb();reg clk;reg rst_n;reg [7:0] pe_enable;reg [7:", "label": "always #5 clk = ~clk;"}
{"generated": "    reg [`TAG_WIDTH-1:0] tag_way0_new [`INDEX_WIDTH-1:0];\r", "label": "    reg [`INDEX_WIDTH-1:0] lru_r;\r"}
{"generated": "\tinput wire clk;\r", "label": "\tinput wire clk;\r"}
{"generated": "assign F = A & B;", "label": "    assign F = A&B;"}
{"generated": "endmodulemodule UDP_rx#(", "label": "    assign newcrc[25] = d[3] ^ d[2] ^ c[17] ^ c[26] ^ c[27];"}
{"generated": "\t\trv1 = registers[rs1];\r", "label": "\t\trv1 <= registers[rs1];\r"}
{"generated": "\twire [5:0] apple_y;\twire [6:0] len;\twire hit_body;\twire hit_wall;\twire [1:0] game_status;\twire die_flash;\t", "label": "\twire [4:0] apple_y;"}
{"generated": "endmodulemodule top();", "label": "    #2 x_i = 1;"}
{"generated": "endmodulemodule top();", "label": "        #10 A = 1; B = 0; Cin = 0;"}
{"generated": "module DataMem(", "label": "    wire RegWrite_EX, RegDst_EX, MemRead_EX, MemWrite_EX, MemtoReg_EX, ALUSrc1_EX, ALUSrc2_EX;"}
{"generated": "            else if (func3 == 3'b010)begin                                     //word                byte_accessL = data_inL;            end            else if (func3 == 3'b100)begin                                     //byte unsigned", "label": "                    default:  byte_accessL = {{16{data_inL[31]}},data_inL[31:16]};                                                                                                                                                                                                                                                                                                                                                         "}
{"generated": "                player2S2: begin", "label": "                    else if(((action2 == await || action2 == left1 || action2 == left2 || action2 == punch)&&"}
{"generated": "module insReg(\r", "label": "\ttribuf_8bit AluBuf(.in(alu_Out), .out(bus), .low_enable(aluOut_en));\r"}
{"generated": ";\r\t\t end\r\t\t else if(counter2 >0)begin\r\t\t\t  outputdata[0] = 0;\r\t\t\t  outputdata[1] = 1;\r\t\t\t  outputdata[2] = Buffer2[", "label": "\t\t\t\tgreen <= 3'b000;\r"}
{"generated": "\txor(t1,A,B);", "label": "\txor(t1,A,B);"}
{"generated": "endmodule", "label": "        logic_flag = 1'b1;"}
{"generated": "//     if (en)", "label": "    $readmemh(\"background.mem\", RAM);"}
{"generated": "                if(rd_pos == FIFO_SIZE - 1) begin", "label": "                ram[rd_pos] <= 'b0;"}
{"generated": "always @(*)", "label": "  always @(*)"}
{"generated": "module Clock_divider #(parameter n = 27)(    input wire clk,    output wire div_2,    output wire div_15,    ", "label": "    second_divider sd(.clk(clk), .div_hsec(div_hsec));"}
{"generated": "\tinitial begin", "label": "\tinitial begin"}
{"generated": "assign RD = mem1[address];\r", "label": "assign RD = mem1[address];\r"}
{"generated": "\t\t\t\t\t\tdatain=8'b00000001;\r\t\t\t\t\t\tparity=parity^datain;\r\t\t\t\t\tend\r\t\t\t\tld_state=0;\r\t\t\t\tdatain=parity", "label": "\t\t\t\t\tpayload_data={$random}%256;\r"}
{"generated": "`timescale 1ns/1ps", "label": "`define C_RESET         16'd20"}
{"generated": "\tinteger i;", "label": "\tinitial begin "}
{"generated": "    if(!rstn) begin", "label": "    if(!rstn) begin "}
{"generated": "\t\t.en(en), .reset(reset),\r\t\t.clk(clk)\r\t);\r\r\treduced_complexity_fir_full baseline_symmetric(\r\t\t.data_out(data_", "label": "\t\t.en(en), .reset(reset),\r"}
{"generated": "            if(out_rst==1)begin", "label": "        rd<=out_rd;"}
{"generated": "    end else if (x >= xmax) begin\r      f = xmax; // Pendenza costante dopo xmax, essendo lo slope = -1\r", "label": "    end else if (x >= xmax) begin\r"}
{"generated": "module andgate(a,b,y);", "label": "    .thread T_0;"}
{"generated": "endmodulemodule top_module(", "label": "endmodule "}
{"generated": "  reg [DATA_WIDTH-1:0] data_in;  wire [DATA_WIDTH-1:0] data_out;  single_port_sync_ram dut(.clk(clk), .cs", "label": "  wire [DATA_WIDTH-1:0] data;"}
{"generated": ";  wire n204;  wire n205;  wire n206;  wire n207;  wire n208;  wire n209;  wire n21; ", "label": "    .C(i_denominator[11]),"}
{"generated": "begin\r\t\t\tk = i/(bmp_width0/8)*8*bmp_width0+(i%(bmp_width0/8))*8+j*bmp_width0;\r\t\t\t", "label": "\ty6i = (a*x0 -d*x1 +f*x2 +g*x3 -a*x4 +b*x5 -c*x6 +e*x7)/1024;\r"}
{"generated": "endmodule", "label": "                    m2reg = 1'b0;"}
{"generated": "\t\t.RegSrc(RegSrcD),\r", "label": "\t\t.ALUControl(ALUControlE),\r"}
{"generated": "\t\tSTA_WRITING       \t: begin\r\t\t\tout_snd_wr_en     \t\t<= #TCQ 1'b1;\r\t\t\tout_snd_din     \t\t<= #TCQ tmp;", "label": "        STA_WRITING        \t: begin\r"}
{"generated": "    .CLK(CLK),", "label": "        .radar_echo(radar_echo),"}
{"generated": "// Path: axi_gb_rotary", "label": "                    axi_bvalid <= 1'b0; "}
{"generated": "endmodule", "label": "   #5 clk = ~clk;"}
{"generated": "    #CLK_CYCLE;", "label": "\t#CLK_CYCLE        flick = 0;"}
{"generated": "// Pre-index", "label": "    STR R1, [R0, #4]!"}
{"generated": "MetaSignal metaRstIn(clk, rstIn, rstInMeta);", "label": "always @(posedge clk)"}
{"generated": "    output reg[3:0] AXI_WSTRB,", "label": "    input[3:0]                              AXI_WSTRB,"}
{"generated": " STATE_IDLE) ? 1'b1 : 1'b0;always @(posedge clk or negedge rstn) begin  if(!rstn) begin    act_cmd_d2 <= ", "label": "  else if (addr_cam_search_en)begin"}
{"generated": "                if(inp1[31] == 1) out = inp1;\r", "label": "                if( inp1[31] == inp2[31]) signbit = (inp2 > inp1) ? 0 : 1;\r"}
{"generated": "// 10-May-22 ", "label": "reg[31:0] scratch;"}
{"generated": "if(count2<417)count2<=count2+1;elsecount2<=1;assign baud_tick_38400bps =(count2<210)?1", "label": "if(count2<260)"}
{"generated": "\t\t\t\tcon_word = 12'h003;\t\t\tend\t\t\t\t\t\t6'b010000: // Condition for state 5            begin\t\t\t\tcon_word = 12'h00B;", "label": "\t\t\t\t\tcon_word = 12'h1A3;"}
{"generated": "] stageReg_13_stsum;  wire [31 : 0] stageReg_13_stsum$D_IN;  wire stageReg_13_stsum$EN;  // register stageReg", "label": "  assign stageReg_12_stsum$D_IN ="}
{"generated": "    end else begin      count <= count + 1;    end  endmodule", "label": "    end else begin"}
{"generated": "// y <= `BSV_ASSIGNMENT_DELAY 16'd1;      end    else      begin        cycle <= `BSV_ASSIGNMENT_DELAY cycle$D_IN;\tx <= `BS", "label": "\ty <= `BSV_ASSIGNMENT_DELAY 16'd1;"}
{"generated": "        right_shift = 1;", "label": "        right_shift = 8;"}
{"generated": "0   :  ?  :  -    ; ?   1   :  ?  :  -    ; 0   0   :  ?  :  -    ; 1   0   :  ?  :  -", "label": "         1   ?   0  :  1   ;"}
{"generated": "end", "label": "    num = 5; #1 $display(\"Source number = %d; MSb = %d\", num, msb);"}
{"generated": "BJN n10(G18,G19,Y16,Y10,Y11,1'b0);\r", "label": "PG n10(G15,Y12,Y13,a,b,1'b0);\r"}
{"generated": "module Full_Adder(", "label": "    Half_Adder HA1(a,b,s1,c1);"}
{"generated": "        control <= 3'b011;\r        in <= 16'd0;\r        #10;\r        $display(\"out is (B - D): %b - %d\\nCarry: %d\\", "label": "        control <= 3'b101;\r"}
{"generated": "input a,b,c;", "label": "assign t = q;"}
{"generated": "\ta = 0;b = 0;cin = 1;\r        #100;\r", "label": "\ta = 0;b = 0;cin = 1;\r"}
{"generated": "  assign product = a * b;\r  assign quotient = product[63:32];\r  assign remainder = product[31:0];\r \r  always @(*)\r  begin\r    case(alu", "label": "  assign product = a * b;\r"}
{"generated": "endmodule", "label": "        next_a = reg_a;"}
{"generated": "//     uart_rxd = 0;    #104170;    uart_rxd = 1;    #104170;    uart_rxd = 0;    #10", "label": "    uart_rxd = 1;"}
{"generated": "        Memory[k] = 32'h1;", "label": "    Memory[k] = 32'h00000000;"}
{"generated": "011_00010_1_0: begin code = 10'b010010_1100; next_rd = flip; end\r\t\t\t10'b100_", "label": "\t\t\t10'b001_10110_0_0: begin code = 10'b011010_1001; next_rd = same; end\r"}
{"generated": "   reg [DATA_WIDTH-1:0] mem [0:MEMSIZE-1];", "label": "   reg [DATA_WIDTH-1:0]           RAM[0:MEMSIZE-1] /* synthesis syn_ramstyle=\"no_rw_check\" */ ;"}
{"generated": "output [2:0]bj_sel_o,output [2:0]reg_sel_o,output reg_write_o,output [2:0]mem_sel_o,output mem_write_o", "label": "output [3:0]read_write_o,"}
{"generated": "\t\t2'd3: out <= pr1*pr2;\r", "label": "\t\t2'd3: out <= pr1*pr2;\r"}
{"generated": "input [11:7] rd,", "label": "input [11:7] rd,"}
{"generated": "\t\t\t\t\t\tif (data_enable && data_frame && (data[31:24] == FS_DT) && (data[23:16] == VC)) begin", "label": "\t\t\t\t\t\tif (data_enable) begin"}
{"generated": "always @(posedge Clk) begin\r", "label": "always @(posedge Clk) begin\r"}
{"generated": "_count;always @(posedge clk)begin    if (resetn == 0) begin        fsm_state <= 0;        cycle_count <= 0;        issue_burst <= 0;    end    else begin        case", "label": "        ashi_rresp <= OKAY;              "}
{"generated": "        3'b000: segmentos=7'b0000001;\r", "label": "        3'b000: segmentos=7'b0000001;\r"}
{"generated": "// Example 5    player_x = 80;    player_y = 250;    #100;    // Example 6    player_x = 120;    player_y = 180;", "label": "    player_x = 80;"}
{"generated": "`timescale 1ns / 1ps", "label": "    or or_1(bor,w2,w3);"}
{"generated": "module RegisterFile(", "label": "                ALUOut <= A | B;"}
{"generated": "    always @(posedge clock) begin        if (is_signed) begin            if (a[7]) begin                q <= (q_neg_acc == 8'd0)? 8'd0 : ~q_", "label": "    reg [7:0] q_pos_temp, q_neg_temp, r_temp;"}
{"generated": "`timescale 1ns / 1ps\r\rmodule KS_array4(in_Pk, in_Gk, out_Pk, out_Gk", "label": "black_cell Arr3_black_cell2(in_Pk[6], in_Gk[6], in_Pk[10], in_Gk[10], out_Gk[10], out_Pk[10]);\r"}
{"generated": "`include \"PPA4.v\"", "label": "    # (`CYCLE);"}
{"generated": "always @(posedge clk) begin", "label": "reg [7:0] threshold;"}
{"generated": "\t\tLCD_EN\t<=\t1'b0;\t\t\t\t\tST\t\t<=\t3;\t\t\t\tend\t\t\t3:\tbegin\t\t\t\t\t", "label": "\t\t\t\t\tif(Cont<CLK_Divide)"}
{"generated": "\t   read_addr_out_next = read_addr_out;", "label": "\tread_addr_gray_next = read_addr_gray;"}
{"generated": "    reg [31:0] instruction_memory [1023:0];", "label": "    reg [31:0] Memory [63:0];"}
{"generated": "\telse if (en_cnt)\r\t\tcnt <= cnt + 1;\rend\r\rassign addr = cnt;\r\rendmodule ", "label": "\telse if (en_cnt)\r"}
{"generated": "endmodulemodule top_module(", "label": "initial begin"}
{"generated": "    initial begin\r", "label": "    initial begin\r"}
{"generated": "  assign s = a ^ b ^ cin;\r", "label": "  assign s = cin ^ a ^ b; \r"}
{"generated": "\tinput\t[3:0]  data2x;\r\tinput\t[3:0]  data3x;\r\tinput\t[1:0]  sel;\r\toutput\t[7:0]  result;\r\r\t", "label": "\tinput\t[3:0]  data2x;\r"}
{"generated": "\t\t\t\t\t\tres_src = 2'd1;\r\t\t\t\t\t\treg_write = 1;\r\t\t\t\t\tend\r\t\t\t\t\t3'b110: // ori\r\t\t\t\t\t\talu_control = 4'd1;\r\t\t\t\t\t", "label": "\t\t\t\t\t\talu_src = 1'd1;\r"}
{"generated": "assign diff=a^b;", "label": "    assign diff=a^b;"}
{"generated": "    wire [15:0] data_in, data_out;    wire [15:0] r1, r2, r3, r4, r5, r6, r7, r8;    wire", "label": "    datapath DataPath(clk, clk_enable,"}
{"generated": "\t.wr_en(wr_en),", "label": "\t.wr_en(wr_en),"}
{"generated": "\r\rfifo_full = full_2;\r\rend\r\rend\r\r\r\r\r\r// to generate soft reset signals\r\ralways@(posedge clk) begin\r\rif (!rst) begin\r", "label": "fifo_full = full_2;\r"}
{"generated": "module add_sub(", "label": "module add_sub("}
{"generated": "module fsk_mod(clk,reset_n,fsk_code_sin_in,fsk_code_out);  input clk;  input reset_n", "label": "  assign fsk_code_sin_out=(m_ser_code_in)? f2:f1;"}
{"generated": "        if(hcount == 800) begin", "label": "        clock_25 = !clock_25;"}
{"generated": "          #550 wdata =  'd105;\r               waddr = 3'b101;\r               \r", "label": "          #550 wdata =  'd105;\r"}
{"generated": "module bridge_top(hclk, hresetn, hwrite, hready_in, htrans, hwdata, haddr, prdata", "label": "hrestn = 1'b0;"}
{"generated": "assign x3 = (b & c);assign x4 = (a | b | c);assign f1 = (x1 | x2);assign f2 = (x3 | x4);endmodule", "label": "assign x3 = (b & c);"}
{"generated": "next_state = Comp;\r\t\t\t\tsel_en = 1'b1;\t\t//1\t\u9009\u62e9\u5668\u4f7f\u80fd\u5f00\r\t\t\t\tsel_sel= 1'b1;\t\t//1\t\u6295\u5e015\u5143\r\t\t\t\t", "label": "\t\t\t\t\t\tRefund = 1'b0;\r"}
{"generated": "\toutput\t[11:0]\tCH3;\toutput\t[11:0]\tCH4;\toutput\t[11:0]\tCH5;\toutput\t[11:0]\tCH6;\toutput", "label": "\toutput\t[11:0]\tCH3;"}
{"generated": "        #1  ps2_data_i = 1;", "label": "        #5  ps2_clk_i = 0;"}
{"generated": "always @(posedge clk or negedge rst_n) begin\r", "label": "always @(posedge clk or negedge rst_n) begin\r"}
{"generated": "// #100;    rst = 0;    #100;    uart_tx_en = 1;    #100;    uart_tx_data = 8'b01000", "label": "    uart_tx_data = 0;"}
{"generated": "\t\ts10 = 1'b0;\t\ts00 = 1'b0;\t\t#10;\t\ts10 = 1'b0;\t\ts00 = 1'b1;\t\t#10;", "label": "\t\ts10 = 1'b0; s00 = 1'b0;"}
{"generated": "// #(`CLK_period*2) gray_data = pat_mem[i];  #(`CLK_period*2) gray_data = pat_mem[i+1];  #(`CLK", "label": "  gray_data = pat_mem[i];"}
{"generated": "module clkgen_200kHz(", "label": "module clkgen_200kHz("}
{"generated": "\r\r\r assign win = win_w ;\r assign loose = loose_w ;\r assign press = press_again ;\r\rendmodule", "label": " assign win = win_w;\r"}
{"generated": "        if(count == dividerBy) begin", "label": "        if(count == dividerBy)"}
{"generated": "\talways @(posedge clk) begin", "label": "always @(posedge clk) begin"}
{"generated": "genvar i;\r", "label": "addRoundKey rk1(state,dataIn,keySet[1407:(1407-128+1)]);\r"}
{"generated": "endmodulemodule Buffer_queue(\r", "label": "      blue <= 2'b11; \r"}
{"generated": "\t\t\t\t.data_a (data),\r", "label": "\t\t\t\t.data_a (data),\r"}
{"generated": "        mem[addr+2]<=data[15:8];        mem[addr+3]<=data[7:0];    endendendmodule", "label": "        mem[addr+2]<=data[15:8];"}
{"generated": "`timescale 1ns / 1psmodule EX_ALU(    input [31:0] SrcA,    input [31:0] SrcB", "label": "                    ALUCtrl==ALU_Slt?($signed(SrcA)<$signed(SrcB)): "}
{"generated": "df d4(.clk(out[3]),.rst(rst),.d(qb[4]),.q(out[4]),.qb(qb[4]));df d5(.", "label": "df d4(.clk(out[3]),.rst(rst),.d(qb[4]),.q(out[4]),.qb(qb[4]));"}
{"generated": "_EX_B <=#2 Reg[IF_ID_IR[20:16]];                                                     ID_EX_Imm <=#2 {IF_ID_IR[31:20]};                                                     ID", "label": "              SLTU : EX_MEM_ALUOut  <=#2 (ID_EX_A < ID_EX_B )? 1:0;"}
{"generated": "assign CNT2 = gray_data_[2];", "label": "assign CNT2 = gray_data_[2];"}
{"generated": "\", uut.\\gpio_control_in_1a[6] ) ;\t\t\t$sdf_annotate(\"../../../caravel/sdf/gpio_control_block.sdf\", uut.\\gpio_", "label": "\t\t$display(\"LA Test seq_gcd(10312050, 29460792)=138 passed\");"}
{"generated": "initial begin    rst = 1'b1;    #10 rst = 1'b0;  end", "label": "  initial begin"}
{"generated": "   \t\t\t end\r   \t\t \r   \t\t 2'b10:    // write button pressed?\r   \t\t\t if(~fifo_full) begin    // FIFO not full\r   \t\t\t\t current_write_", "label": "   \t\t\t \tempty_buff = 1'b1;\r"}
{"generated": "    parameter DIVIDE_RATE = 22'd1", "label": "    parameter n = 27"}
{"generated": "0;                                     op_rd_ack <= 1'b1;                                     op_rd_data <= 1'b0;                                     addr_t <= 1'b0;                                     wr_data_t <= 1'b0;                                     r", "label": "                    7'd27: mdio_out <= wr_data_t[4];"}
{"generated": "reg [3:0] counter;", "label": "reg clk_send;"}
{"generated": "//lab2_comparator my_comparator(.V(SW), .z(z));    lab2_circuit_a my_circuit_a(.V(SW), .A(A));    seg_dec", "label": "    wire [3:0] M;"}
{"generated": "    input [3:0] a,", "label": "    input [3:1]  a,b,c,"}
{"generated": "\t\telse if(temp[0] == 0 && temp[1] ==1)begin\r\t\t\tif(Buffer2[15] ==1)\r\t\t\t\tloss_data2 = loss_data2+1;\r\t\t\t", "label": "\t\tif(temp[0] == 0 && temp[1] ==1)begin\r"}
{"generated": "//================================================================", "label": "        case (ashi_rindx)"}
{"generated": "\t initial begin\t $monitor(\"X=%b, Y=%b, Z=%b \\n\",X,Y,Z);\t endendmodulemodule top_module(", "label": "\t initial begin"}
{"generated": "endmodulemodule top_module(", "label": "        A = 3'b010; B = 3'b010; #10;"}
{"generated": "end // mainendmodule // Guia_0103", "label": "integer x1 = 67;"}
{"generated": "//        GRESTORE_int = 1", "label": "\tGSR_int = 1'b1;"}
{"generated": "assign normal_bit = |mantissa_mult_result[47 : 24];assign final_mantissa = mantissa_mult_result[47 : 24];assign final_exponent = a[", "label": "assign normal_bit = mantissa_mult_result[47] ;"}
{"generated": "output reg [31:0] PC_out);", "label": "output reg [31:0] PC_out"}
{"generated": "wire islemci_bellek_yaz;", "label": "wire islemci_bellek_yaz;"}
{"generated": "xor(S, A, d1);\r", "label": "and(e0, A, d1);\r"}
{"generated": "module uart_rx(", "label": " * i_clk    - The clock of the local system, used for sampling the bits and FSM sync"}
{"generated": "module mux(s0,i0,i1,y);", "label": "  input s0,i0,i1;"}
{"generated": "module conv55_tb;", "label": "\tfor (x = 0; x < 6; x = x+1) begin : addertree_nodes1"}
{"generated": "module debouncer (", "label": "/* * PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE * */"}
{"generated": "output\t\twire\t[11:0]\tVGA_BUS_R;", "label": "output\treg\t[3:0]\t\tVGA_BUS_R;"}
{"generated": "\toutput [1:0] dirSelPC;\r", "label": "\tinput [1:0] dirSelPC;\r"}
{"generated": "//--", "label": "\treg[31:0] i;"}
{"generated": "        if(rst) begin", "label": "        else target_key <= target_key;"}
{"generated": "module R8B(input clk,input sel,input rnw,inout [7:0]Dbus);\r\rreg [7:0]D;\r\ralways @(posedge clk)\rbegin\r", "label": "module R8B(input clk, input sel, input rnw, inout [7:0]Dio);\r"}
{"generated": "initial begin", "label": "initial begin"}
{"generated": "                curr[set_in] <= {curr[set_in][WAY_SIZE-2:0], curr[set_in][WAY_SIZE-1]};", "label": "                curr[set_in] = (curr[set_in] + 1) % ASSOCIATIVITY;"}
{"generated": " alu alu(SrcA, SrcB, ALUControl, ALUResult, Zero); mux2 #(32) srcbmux(WriteData, ImmExt, ALUSrc, SrcB", "label": " mux2 #(32) srcbmux(WriteData, ImmExt, ALUSrc, SrcB);"}
{"generated": "module fifomem #(parameter DSIZE = 8, parameter ASIZE = 4 )( output reg [D", "label": " .wrst_n(wrst_n));"}
{"generated": "    output reg [3:0] Hundreds,", "label": "    output reg [3:0] Hundreds, "}
{"generated": "endmodulemodule top();", "label": "        ro_led <= ro_led;"}
{"generated": "// wire  c2 = sub_wire3;\twire  locked = sub_wire4;\twire  inclk0 = inclk0;\twire  areset = areset;\taltpll\taltpll_", "label": "\twire  c2 = sub_wire3;"}
{"generated": "\treg [RAM_WIDTH-1:0] ram [0:(2**RAM_ADDR_BITS)-1];\r", "label": "   reg [RAM_WIDTH-1:0] ram_name [(2**RAM_ADDR_BITS)-1:0];\r"}
{"generated": "_RL_cycle_3,       CAN_FIRE_RL_cycle_4,       CAN_FIRE_RL_cycle_5,       CAN_FIRE_RL_cycle_6,       CAN_FIRE_RL", "label": "  FIFO2 #(.width(32'd80), .guarded(32'd1)) f_7(.RST(RST_N),"}
{"generated": "  input clk,", "label": "    input i,clk,rst,"}
{"generated": "                case(move)", "label": "                mon_out[31:0] <= 32'd0;"}
{"generated": "endmodule", "label": "endmodule"}
{"generated": "endmodule", "label": "endmodule"}
{"generated": "            FINISH: begin\r", "label": "            FINISH: begin\r"}
{"generated": "assign bout = ~(and1 | and2 | and3);\rendmodule\r\rmodule MUX (D0, D1, S, Y); //2:1 MUX\rinput D0, D1, S;", "label": "or(bout, and1, and2, and3);\r"}
{"generated": "\tRegfile[rd_offset] = rs >> shamt;end\telse if (op_code == 4'b0011)begin\t//if sel = 3 then A & B\t\tRegfile[rd_offset", "label": "\t\tRegfile[rd_offset] = rs >> shamt;end"}
{"generated": " signal            // to start writing to the slave device.            //=========================================================================================================            0: begin                // If we're not idle, start writing to the slave device.                if (uart_amci_write == 1) begin", "label": "    reg[31:0] read_data;        "}
{"generated": "initial begin", "label": "initial begin"}
{"generated": "output\tLCD_RW,LCD_EN;\r", "label": "output\treg\t\tLCD_EN;\r"}
{"generated": "module mux_2x1_conditionaloper(", "label": "module mux_2x1_conditionaloper("}
{"generated": "endmodule", "label": "endmodule "}
{"generated": "`ifndef ALTERA_RESERVED_QIS\r", "label": "`ifndef ALTERA_RESERVED_QIS\r"}
{"generated": "    wire [11:0] bram_read_data;    reg  [17:0] bram_write_addr, bram_read_addr;    reg bram_wea;        // Timing", "label": "    wire [11:0] bram_read_data;"}
{"generated": "   \r   assign word_addr = ADDR[11:2];\r   assign RD = mem_cell[word_addr];\r   always @ (posedge CLK) begin\r      if (RW) begin\r", "label": "   assign word_addr = ADDR[11:2];\r"}
{"generated": "    reg [7:0] key_in;    reg [7:0] key_down_reg;    reg [7:0] key_up_reg;    reg [7:0] key_in_reg;", "label": "    wire [7:0] key_in;"}
{"generated": "                        next_state = one;", "label": "                        \tq_dec = 1'b1;"}
{"generated": "\t.nMREQ(nMREQ),\r", "label": "\t.nMREQ(nMREQ),\r"}
{"generated": "module controller_fsm_tb();", "label": "            $display(\"Error[AND]: out is %b, expected 0100\", sim_out);"}
{"generated": "            IDLE: begin\r                if (start) begin\r                    load = 1;               // Load operands A and B\r                    next_state = LOAD;         // Move to LOAD state\r                end\r            end\r\r", "label": "            IDLE: begin\r"}
{"generated": "    input_value = 11'b11011011011;  #10 $display(\"Match: %b\", match);  // Test case 2: Input does not match loaded value", "label": "    input_value = 11'b11011011011;"}
{"generated": "    if (counter == CLK_FREQ / DESIRED_PERIOD - 1) begin", "label": "    if (counter == DESIRED_PERIOD - 1) begin"}
{"generated": "    Four_bit_Down_counter Count2(cin[1],clk,led[7:4]);", "label": "    Four_bit_Down_counter Count2(cin[1],clk,led[7:4]);"}
{"generated": "2 (clk, flush_e, 1'b1, alu_src_d, alu_src_e);\rRegister_1bit cnt_e_reg3 (clk, flush_e, ", "label": "Register_1bit cnt_m_reg3 (clk, rst, 1'b1, mem_write_e, mem_write_m);\r"}
{"generated": "            adc_trg_flag <= adc_trg_flag;\r    end\r\r    // Trigger Neg, Pos Flag\r    always @(posedge i_clk or negedge i_fRST", "label": "            adc_trg_flag <= adc_trg_flag;\r"}
{"generated": "    if(pause) begin", "label": "    if (!pause) begin "}
{"generated": "    clk = 0;", "label": "    forever #5 clk = ~clk;"}
{"generated": "    assign ID_Enable_LO  = (instruction[31:26] == R_TYPE) ? 1'b1 : 1'b0;", "label": "    assign ID_Enable_LO  = (instruction[31:26] == R_TYPE) ? 1'b1 : 1'b0;"}
{"generated": "\tinput in_emergency_elevator2,\toutput [63:0] destination_floor_elevator1_out,\toutput [63:0] destination_floor_elevator2_out", "label": "\tinput in_emergency_elevator2,"}
{"generated": "\tinout \t\t    [35:0]\t\tGPIO,\r", "label": "\tinout \t\t    [35:0]\t\tGPIO\r"}
{"generated": "endmodule", "label": "black_cell Arr1_black_cell2(in_Pk[3], in_Gk[3], in_Pk[4], in_Gk[4], out_Gk[4], out_Pk[4]);\r"}
{"generated": "\t\tMove_Not:begin\r", "label": "\t\tMove_Not:begin\r"}
{"generated": "    wire w1, w2, w3;", "label": "    output s, c_out"}
{"generated": "} = 4'b100;                        3'b110: {IRWr, MemRd, RegWr} = 4'b100;                        3'b111: {IRWr, MemR", "label": "            {ALUSrcA, ALUSrcB, DataSrc, WrDataSrc, MemRd, ExtSel, RegDst, ALUCtrl} <= 12'b000101000110;"}
{"generated": "// if(B2 == 1'b1)", "label": "        if(mainState == 2'b10 && B2 == 1'b1 && B3 == 1'b0 && B4 == 1'b1 && reset == 1'b0 && globalReset == 1'b0 && en ==1'b0) "}
{"generated": "input [Class_in_bit -1 : 0] B2_IN,input [Class_in_bit -1 : 0] B3_IN,input [Class_in_bit -1 : 0] B", "label": "input [Class_in_bit -1 : 0] B2_IN,"}
{"generated": "\talways @( posedge clk ) ", "label": "\treg up_key_last;"}
{"generated": "endmodulemodule ALU_Decoder(", "label": "    .ALU_FUN(ALU_FUN[1:0]),"}
{"generated": "endmodule", "label": "            MemtoReg_EX <= 0;"}
{"generated": "    ALUOP               =2'b00;\r    o_Jal_R             =1'b0;\r    o_LUI_D             =1'b0;\r    end\rS_type_", "label": "    ALUOP               =2'b01;\r"}
{"generated": "module WriteFull #(parameter address=3)(write_clk,write_rst,write_inc,sync_read_ptr,write_ptr,write_addr,write_full);", "label": "module WriteFull #(parameter address=3)(write_clk,write_rst,write_inc,sync_read_ptr,write_ptr,write_addr,write_full);"}
{"generated": "module and_gate(", "label": "module and_gate("}
{"generated": "    output wire        done    );", "label": "    output wire        done"}
{"generated": "    always @(posedge clock) begin        if (mwmem == 1'b1) begin            memory[mqb[31:2]] = mr;        end        mdo = memory[mqb[", "label": "        memory[8] = {4'h8, 20'h0, 4'h8, 4'h8};"}
{"generated": "    always @(posedge clk_out or posedge rst) begin\r        if(rst)\r            btn_debounce <= 1'b0;\r        else if(count == 20'd0)\r", "label": "    always @(posedge clk_out or posedge rst) begin\r"}
{"generated": "    initial begin", "label": "    initial begin"}
{"generated": "    input wire enable,", "label": "    input wire enable,"}
{"generated": "\t\tclk_one_sec <= ~clk_one_sec;\r", "label": "\t\tclk_one_sec=~clk_one_sec;\r"}
{"generated": "`timescale 1ns / 1psmodule coord_axis_reg #(parameter N = 32)(\tinput wire clk,\tinput wire [N-1:0] i_coord,\toutput wire [N", "label": "    always @(posedge clk) begin"}
{"generated": "  input wire SPI_DI,", "label": "   .AUDIO_L(AUDIO_L),"}
{"generated": "z_n_img_r <= z_n_img_r;\r\t\t\tz_n1_real_r <= z_n1_real_r;\r\t\t\tz_n1_img_r_stage", "label": "        default: begin\r"}
{"generated": "    DUT.DstReg, DUT.ALUSrcB, DUT.RegWrite, DUT.MemtoReg, DUT.MemWrite, \r", "label": "    DUT.DstReg, DUT.ALUSrcB, DUT.RegWrite, DUT.MemtoReg, DUT.MemWrite, \r"}
{"generated": "    input                                  AXI_AWREADY,    output reg[2:0]                  AXI_AWPROT,    // \"Write Data\"                     -- Master --    -- Slave --    output reg [AXI_", "label": "    output     [2:0]                    AXI_AWPROT,"}
{"generated": "ALU ALU_inst(", "label": "ALU ALU_inst(.Din1(Din1), .Din2(Din2), .Sel(Sel), .Tmp(w1));"}
{"generated": "endmodule\r", "label": "gray_cell Arr4_gray_cell4(in_Gk[4], in_Pk[12], in_Gk[12], out_Gk[12]);\r"}
{"generated": "//", "label": "    output reg [31:0] readData"}
{"generated": "  reg [2:0] Current_state, Next_state;", "label": " always@(posedge clk or negedge rst_n)"}
{"generated": "module mips_top_level(clock, reset, nextPC, ula_result, data_mem);\t", "label": "\twire [4:0] rd = instruction[15:11];"}
{"generated": " #(period/2) clk = ~clk; ", "label": " #(period/2) clk = ~clk;"}
{"generated": "_n) begin            done_cnt = 0;        end        else if (done) begin            done_cnt = done_cnt + 1;        end    end    // Error counter    always @(posedge clk", "label": "                $display(\"\\033[1;31m-----------------------------------------------------------------------------------------\\033[0m\\n\");"}
{"generated": "            out_BMP[WIDTH*3*(HEIGHT-l-1)+6*m+3] <= DATA_WRITE_R1;\r            out_BMP[WIDTH*3*(HEIGHT-", "label": "            out_BMP[WIDTH*3*(HEIGHT-l-1)+6*m+5] <= DATA_WRITE_R1;\r"}
{"generated": "\t\tSLL    : alu_out = oprend_1 << oprend_2;\r", "label": "\t\tSLL\t   : alu_out = oprend_1 << oprend_2;\r"}
{"generated": "    output reg [6:0] seg,", "label": "    output reg [1:0] mainState,"}
{"generated": "// \t\t\t\t\t\t .sel", "label": "\t\t\t\t\t\t .loadbrREG(w_loadbr), "}
{"generated": "//mem[wr_ptr] <= din;endendalways@(posedge clk)beginif(!rst)beginwr_ptr <= 0;endelseif(soft_rst==1)beginwr_ptr <= 0", "label": "{mem[wr_ptr[3:0]][8], mem[wr_ptr[3:0]][7:0]} <= {lfd,din};"}
{"generated": "module MUX4to1(input in0, in1, in2, in3, sel0, sel1, output out);", "label": "module Mux4to1(input [0:3] in, input [1:0] s,output out);"}
{"generated": "endmodulemodule top_module(", "label": "        wait for 50 ns;"}
{"generated": "always @(*) begin\r", "label": "always @(A or B) begin\r"}
{"generated": "         $display(\"Testing %dth test case\", i);\r\r", "label": "         a = data[i*3+0];\r"}
{"generated": "   input                       s0_ren,", "label": "\t\taltpll_component.port_clk1 = \"PORT_UNUSED\","}
{"generated": "4] + amulw[15];endalways@(posedge clk or negedge rst_n) begin    if(!rst_n) begin        for(i=0;i<12;i=", "label": "                7'd6: outbuf[6] <= outbuf[6] + sum_aw;"}
{"generated": "    .sIgn   (sIgn),    .sAlr   (sAlr)    );endmodulemodule top_module(", "label": "    .sIgn   (sIgn),"}
{"generated": "        if (reset) begin\r", "label": "        if (reset) begin\r"}
{"generated": "        if(RWMode == 1'b1 && hit == 1'b1) begin //read", "label": "        if(RWMode == 0 && address !==32'bX) begin"}
{"generated": "`timescale 1ns / 1nsmodule ConV1", "label": "parameter offset1_ow = 9'd0, offset2_ow = 9'd24, offset3_ow = 9'd60;"}
{"generated": "//    assign (strong1, weak0) PRLD = PRLD_int;    assign (strong1, weak0) GRESTORE = GRESTORE_int;    assign (strong1, weak0)", "label": "    assign (weak1, weak0) PRLD = PRLD_int;"}
{"generated": "    plugboard2  <= plugboard_nxt[2];\r", "label": "    plugboard2  <= plugboard_nxt[2];\r"}
{"generated": "        4'b1000: segmentos=7'b0000000;\r        4'b1001: segmentos=7'b0000100;\r        4", "label": "        4'b1000: segmentos=7'b0000000;\r"}
{"generated": "\t\t\t\tif(wait2 && !rest2) rest2 = 1;", "label": "\t\t\t\t\thp1 = hp1!=3 ? hp1+1 : hp1;"}
{"generated": "mem1[address] <= WriteData;\rend\rendmodule\r", "label": "mem1[address] = WriteData;\r"}
{"generated": "        4'b0101: segmentos=7'b0100100;\r", "label": "        4'b0101: segmentos=7'b0100100;\r"}
{"generated": "// Quartus II Verilog Template// 4-State Moore state machine// A Moore machine's outputs are dependent only on the current state.// The output is written only when the state", "label": "\t\t\t\tout = 1'b1;"}
{"generated": "        $display(\"----------------------------------------\");        $display(\"----------------------------------------\");        $display(\"----------------------------------------\");        $display(\"----------------------------------------\");        $display(\"----------------------------------------\");        $display(\"----------------------------------------\");        $display(\"----------------------------------------\");        $display(\"----------------------------------------\");        $display", "label": "        $display(\"----------------------------------------\\n\");"}
{"generated": "\talways@(posedge clk)begin", "label": "\talways@(posedge clk)begin"}
{"generated": "      sound <= 0;    end    else begin      if (tick_counter >= ticks_per_second / freq) begin        tick_counter <= 0;        sound <= ~sound;      end      else begin        tick_", "label": "      sound <= 0;"}
{"generated": "'b1, 1'b0);        run_test(OP_SUBC,           32'h00000000, 32'h80000000, 1", "label": "        run_test(OP_AND,            32'h80808080, 32'hff00ff00, 1'b0, 32'h80008000, 1'b0, 1'b0, 1'b1, 1'b0);"}
{"generated": " signal            // to start writing to the slave device.            // We're also waiting for the slave device to acknowledge the write address            // before we start writing data.            case 0: begin                if (uart_amci_write", "label": "                amci_write <= 1;"}
{"generated": "            s0: out =1'b0;", "label": "            s0: out =1'b0;"}
{"generated": "module ahb_master_interface(input hclk,hresten,hreadyout,input [1:0]hres,input [", "label": "@(posedge hclk)"}
{"generated": "module cascade_tb;  //waiting time  parameter WAIT_CYCLES = 5;    //signals    reg SP,SNGL;    reg [", "label": "        pulse2=1'b1;pulse1=1'b0;"}
{"generated": "reg [7:0] a, b, c;\r", "label": "reg cmp_result = 0;\r"}
{"generated": "Y_1 (.VGND(vssd1),    .VNB(vssd1),    .VPB(vccd1),    .VPWR(vccd1)); sky130_fd_", "label": "    .VPWR(vccd1));"}
{"generated": "\t\t\t\toutbuf <= buffer;\t\t\t\tend\t\t\tend\t\tend\talways @(posedge spiclk) begin\t\tif (csb == 1'b1) begin\t\t\tbitcount <= 0;\t\t\tbytecount", "label": "\t\t\t\t\tspi_addr <= spi_addr + 1;"}
{"generated": "endmodulemodule top_module(", "label": "        .INTERNAL_INT(INTERNAL_INT_internal),  "}
{"generated": "\t.clk(clk),", "label": "\t.P_COUNT_BIT\t(P_COUNT_BIT) "}
{"generated": "        HIGH_ALERT: begin            if ((wind<=15 && visibility==2'b00) || (temperature>=-35 && temperature<=35)) begin                nextState = ALL_CLEAR;", "label": "        HIGH_ALERT: begin"}
{"generated": "\t\t\t\t\t\t.B(xor1[7:0]),\r", "label": "\t\t\t\t\t.B(xor1[7:0]),\r"}
{"generated": "//", "label": "--               |              |               |"}
{"generated": "\t\tif (loadar == 1'b1) begin", "label": "\t\tif (done == 0) begin"}
{"generated": "`default_nettype none`timescale 1ns/100ps  module RAM_4K(A, nOE, nWE, nCS, DQ); input [11", "label": "`include  \"../tv80_lib/8085_instr_set.v\" "}
{"generated": "                        1'b0: led[0] <= (count_ms <= count_s) ? 1'b0 : 1'b1;\r                    endcase\r                end\r                4'b0010:", "label": "                        1'b0: led[0] <= (count_ms > count_s) ? 1'b1 : 1'b0;\r"}
{"generated": "        in1 = 8'b01111111;", "label": "        in1 = 8'b00000000;"}
{"generated": "localparam [9:0] squareColStart = 100;", "label": "localparam [9:0] squareRowEnd = 250;"}
{"generated": "module testbench;", "label": "    A = 4'b0001;"}
{"generated": "\t$dumpfile(\"compuertas_tb.vcd\");", "label": "\t#1 \t\ta = 1'b0;b = 1'b0;"}
{"generated": "\t\tcase(i)", "label": "\t\tfor(i=0;i<32;i=i+1)begin"}
{"generated": "RAM              ram1(clk,rst,wre,ram_in,ADD,data_out,done);\r", "label": "RAM            ram1(clk,rst,wre,ram_in,ADD,data_out,done);\r"}
{"generated": "; reg\t\t[15:0]\tRegister14; reg\t\t[15:0]\tRegister15; //------------------------- reg\t\t[15:0]\tregister_10; //------------------------- reg\t\t[", "label": "always @( posedge mdc_i ) "}
{"generated": "    assign ose_teli = mA | mB;", "label": "   assign ose_teli = mA | mB;"}
{"generated": "// driver <= 100;    #10      $display(\"writing some values\");    addr <= 101;    driver <= 101;    #10      $display(\"writing some values\");    addr <= 102;", "label": "    driver = 200;"}
{"generated": "    case(ALUControl)", "label": "    case (ALUControl)"}
{"generated": "endmodule", "label": "            {Carry_Out_Comp, Arith_Comp} = 'b0;"}
{"generated": "        fd = $fopen(\"C:\\\\Vivaldo\\\\Project\\\\result.txt\", \"r\");", "label": "        fd = $fopen(\"C:\\\\Vivaldo\\\\Project\\\\convolResult.txt\", \"w\");"}
{"generated": "\t\t\t\t\t(current_insrt[6:0] == 7'b0010011 || current_insrt[6:0] == 7'b0000011 || current_insrt[6", "label": "\t\t\t\t   (current_insrt[6:0] == 7'b1101111) ? J_imm:\r"}
{"generated": "                .data        (data),\r", "label": "                .data        (data),\r"}
{"generated": "//       WILL_FIRE_RL_rule_tb_2,       WILL_FIRE_RL_stop;  // rule firing signals  wire FIRED_RL_cyclecount,       FIRED_RL_rule_tb_", "label": "       WILL_FIRE_RL_rule_tb_2,"}
{"generated": "endmodulemodule top_module(", "label": "in_solved = 1'b0;"}
{"generated": "LCD_Controller lcd_controller (\r", "label": "/*---------> Writing on LCD <---------*/\r"}
{"generated": "//                 assign mat_B_T[row*MAX_DIM + col] = mat_B[", "label": "            for (col = 0; col < MAX_DIM; col = col + 1) begin: col_loop"}
{"generated": "endmodulemodule top_module(", "label": "    .RDATA(RDATA),"}
{"generated": " A_out,\r                B_out\r        );\r        assign A = A_out,\r                B = B_out;\r        assign Mux_Memo = (IorD == 2'b00) ?", "label": "        Un_16_to_32bits un_16_32(\r"}
{"generated": "\talways @(posedge clock)\r\t\tbegin\r\t\t\tif (SwO == 1'b1)\r\t\t\t\tct[0] <= 1'b1;\r\t\t\telse\r\t\t\t\tct[0] <= 1'", "label": "\talways @(posedge clock)\r"}
{"generated": "\t.select(controll_unit_ALU_input_2_mux), \t\t.out(ALU_input_2_mux_out));\t\tALU #(.ALU_command_length(ALU_", "label": "\twire [PC_INPUT_LENGTH - 1 : 0] adder_in_2_mux_out;"}
{"generated": "// Arquitetura e Organiza\u00e7\u00e3o de Computadores - ", "label": "\t\t\tcurrent_pc = 32'b0;"}
{"generated": "    assign carry = (ALUControl[0] & ~(a[31] ^ b[31]) & (a[31] ^ sum[31]));\r", "label": "    assign carry = (ALUControl[1] ==1'b0) & sum[32];\r"}
{"generated": "endmodulemodule top_module(", "label": "            s2: if(in==1)"}
{"generated": "module Vr_PC(", "label": "    wire [31:0] WD;"}
{"generated": "\t$dumpfile(\"fsm1_tb.vcd\");", "label": "  $dumpfile(\"fsm1_tb.vcd\");"}
{"generated": "    // .data_RE(data_RE),     .data_Di(data_Di),     .data_A_shifted(data_A_shifted),     .data_Do(data_Do));bram1", "label": "     .data_RE(data_RE),"}
{"generated": "    always @(posedge clk) begin", "label": "    always @(posedge clk) begin"}
{"generated": " = 0;\\\r        B_write = 0;\\\r        ir_write = 0;\\\r        EPC_write = 0;\\\r        mem_reg_write = 0;\r\r        always @(posedge clk) begin", "label": "                                MFLO: begin\r"}
{"generated": "\twire [7:0]x;\twire [9:0]y;", "label": "\twire [7:0]x;"}
{"generated": "clr)\t\trd_clr_r <= 1'b1;\telse\t\trd_clr_r <= 1'b0;always @(posedge wr_clk or posedge clr)\tif(cl", "label": "\t.waddr(\t\twp_bin[aw-1:0]\t),"}
{"generated": "endmodulemodule tb_apbslave();", "label": "    reg [ADDR_WIDTH-1:0] paddr;"}
{"generated": "            Branch      = 0;\r", "label": "            Branch      = 0;\r"}
{"generated": "1                 ?   0   :  ?  :  -    ; // GATE => 0, hold                 ?   1   :  ?  :  -    ; // GATE => 1, hold                 ?   ?   : ", "label": "`default_nettype wire"}
{"generated": "        a = 1'b1; b = 1'b0;\r        #100\r        // Test case 4\r        a = 1'b1; b = 1'b1;\r        \r    end\r", "label": "        a = 1'b1; b = 1'b0;\r"}
{"generated": "    always @(*)\r", "label": "    always @(*)\r"}
{"generated": "\t\t\t\t.address_b (1'b1),", "label": "\t\t\t\t.address_b (1'b1),"}
{"generated": "    assign octave = octave_in;", "label": "wire [`NOTE_BITS-1:0] note;"}
{"generated": "assign R = A%B;\rendmodule\r\rmodule FND_decoder(BCD, FND);\rinput [3:0] BCD;\routput [7:0] FND;\r\rassign FND", "label": "assign R = A%B;\r"}
{"generated": "\t\tinput\t\t\t[RAM_ADDR_BITS-1:0]\taddress,\tinput\t\t\t[RAM_WIDTH-1:0]\t\tinput_data,\toutput\t[RAM_WIDTH-", "label": "    input \t\t[RAM_ADDR_BITS-1:0]\taddress,"}
{"generated": ")(", "label": "  parameter   EXTRACT_NO_DELAHY     = 1"}
{"generated": "module full_adder", "label": " sky130_ef_sc_hd__decap_12 FILLER_0_3_15 ();"}
{"generated": "        RESET = 1;        CLK = 0;        #10        RESET = 0;        #10        RESET = 1;        #10        RESET = 0;        #10        RESET = ", "label": "        {instr_mem[10'd19] , instr_mem[10'd18] , instr_mem[10'd17] , instr_mem[10'd16]} = 32'b00000010000001000000000100000000;"}
{"generated": "   endmodule", "label": "        default: ALUControl = `ADD_FUNCT3;"}
{"generated": "    initial begin", "label": "    reg [7:0] result;"}
{"generated": "  reg clk;", "label": "  reg clk = 0;"}
{"generated": "            6'b000011: begin        //sra:rt\u53f3\u79fbshamt\u4e2a\u4f4d\u7f6e\uff0c\u7136\u540e\u628a\u7ed3\u679c\u5b58\u5230rd\uff0c\u57dfrs\u88ab\u5ffd\u7565                if (rt_address == 5'b00", "label": "            reg_result = temp_B - temp_A;"}
{"generated": "        packet_id <= 0;", "label": "        packet_id <= 0;"}
{"generated": "endmodulemodule top();", "label": "   wire        M_AXI_ACP_RVALID;"}
{"generated": "begin : main", "label": "begin : main"}
{"generated": "\t\tforever #5 clk = ~clk;\tend\tendmodule", "label": "\t\t#25 clk=~clk;"}
{"generated": "\t\t\tif(byte_sel[3])\r", "label": "\t\t\tif(byte_sel[3])\r"}
{"generated": "        if (clear == 1'b0) begin", "label": "        o_out = count;"}
{"generated": "output\t[11:0]\tCH7;", "label": "\toutput\t[11:0]\tCH7;"}
{"generated": "    reg [7:0] fifo [0:31];", "label": "   reg [11:0]      w_ptr; "}
{"generated": "        if (rst) rptr <= 0;\r        else if (rinc && !rempty) rptr <= rptr+1;\r    assign wfull = (wptr[ASIZE] != rptr[", "label": "        if (rst) begin \r"}
{"generated": "    A = 4'b0000;", "label": "    $monitor(\"A = %b , B = %b , A_lt_B=%b,A_gt_B=%b,A_eq_B=%b, success=%b\",A,B,A_lt_B, A_gt_B, A_eq_B, (((A>B&A_gt_B)|(A<=B&!A_gt_B))&((A<B&A_lt_B)|(A>=B&!A_lt_B))&((A==B&A_eq_B)|(A!=B&!A_eq_B))));"}
{"generated": "//            2'd2: out[1:0] <= 2'b00;            2'd0: out[1:0] <= 2'b11;            default: out[1:0] <= 2", "label": "            default: out[1:0] <= 2'b00;"}
{"generated": "n_tube2;                        if (en_back) begin                            state <= `menu_mode;                            en_Free <= 0;                            en_Auto <= 0;                            en_Play <= 0;                            en_Stdy <= 0;", "label": "                                    7'b0000010: menu_song <= `two_tigers;"}
{"generated": "endmodulemodule WC (clk, rst, D, Z);", "label": "\t$display(\"---------------------------------------------\");"}
{"generated": "\t   data_out_internal <= 4'b0000;", "label": "\t   data_in_internal <= 4'b0000;"}
{"generated": "`include \"calc.v\"", "label": "calc calc_uut(.led(led), .sw(sw), .clk(clk), .btnc(btn_state[1]), .btnl(btn_state[2]), .btnu(btnu), .btnr(btn_state[0]), .btnd(btnd));"}
{"generated": "wire [7:0] fifo_data_next;", "label": "reg [7:0]   \tfifo_data_next[0:7];"}
{"generated": "    assign w_addr = w_bin[ADDR_BITS-1:0];\r", "label": "    assign w_addr = w_bin[ADDR_BITS-1:0];\r"}
{"generated": "  wire            cram0_ce_n,\routput  wire            cram0_oe_n,\routput  wire            cram0_we_n,\r\routput  wire    [21:16]", "label": "    .video_rgb              ( video_rgb ),\r"}
{"generated": "endmodulemodule top();", "label": "    #10 $finish;"}
{"generated": "**********************************************************************/", "label": "**********************************************************************/"}
{"generated": "      mux_block block (m[i],n[i],sel[i+1],m[i+1],n[i+1]);", "label": "      mux_block block("}
{"generated": "//\t\taltpll_component.inclk0_input_frequency = 25000,\t\taltpll_component.intended_device_family = \"Cyclone IV E\",\t\taltpll", "label": "\t\taltpll_component.inclk0_input_frequency = 20000,"}
{"generated": "\toutput nQ; wire nQ;\r", "label": "\toutput nQ; wire nQ;\r"}
{"generated": "Data_1_Add_7,\rData_1_Sub_7,\rData_2_Add_7,\rData_2_Sub_7,\rData_3_Add_7,\rData_3_Sub", "label": "Data_1_Add_6,\r"}
{"generated": "\t\t\t\t\tincr_reg <= incr_next;\r\t\tend\r\talways @ (*)\r\t\tbegin\r\t\t\tincr_next <= incr_reg + 4'b0001;\r\t\t\tif", "label": "\t\t\t\t\tincr_reg <= incr_next;\r"}
{"generated": "    .addr (apb_addr),    .din (apb_wdata),    .dout (mem_dout));", "label": "    .addr (apb_addr),"}
{"generated": "`timescale  1ns / 1ps\r", "label": "Computation InstComputation(\r"}
{"generated": "  reg [7:0] dout_reg;", "label": "reg [7:0]header,int_reg,int_parity,ext_parity;"}
{"generated": "    if (i_rst) begin", "label": "    if (i_rst) begin"}
{"generated": "            DTMemory[30]<=32'h00000000;\r", "label": "            DTMemory[30]<=32'h00000000;\r"}
{"generated": "  input   [width-1:0]   data;  input                     rdreq;  input                     wrreq;  output                    empty;  output                    full;  output   [width-1:0]   q; ", "label": "  input       [width-1:0]   data;"}
{"generated": "B=6'b000111;\rfxn = 3'b111;\r# 100;\r\r", "label": "B=6'b000011;\r"}
{"generated": "\t or or_gate20(result[20], A[20], B[20]);\t or or_gate21(result[21], A[21], B[21]);\t or or_", "label": "\t not (B_complement[2], B[2]);"}
{"generated": "            dout <= mem[addr];", "label": "            dout <= mem[addr];"}
{"generated": "always @(posedge clka)", "label": "always @(posedge clka)"}
{"generated": "param G11_6 = 32'h97751061;localparam G11_7 = 32'h428A482D;localparam G11_8 = 3", "label": "                                m_axis_tdata<=check[n-k-1:n-k-width];"}
{"generated": "\t\t\tdefault: begin code = 10'b000000_0000; next_rd = same; end\r\t\tendcase\r\tend\r\rendmodule\r\r", "label": "\t\t\t9'b111_11110_0: begin code = 10'b011110_1000; next_rd = same; end\r"}
{"generated": "    debouncer_delayed_fsm fsm(", "label": "    debouncer_delayed_fsm FSM("}
{"generated": "            if (gout) begin", "label": "            if (gout) begin"}
{"generated": "\t\t\t\t\t\t\t\t\t\t\t\t\t\t4'b0011: {Lm_n,EI_n} <= 2'b00;\r\t\t\t\t\t\t\t\t\t\t\t\t\t\t4'b0100: {Lm_n,EI_n}", "label": "\t\t\t\t\t\t\t\t\t\t\t\t\t\t4'b0011: {Lm_n,EI_n} <= 2'b00;\r"}
{"generated": "    parameter TAG_BITS      = ADDRESS_BITS - SET_BITS - BLOCK_BITS,    parameter DATA_BITS      = 32,    parameter CYCLE_COUNT   = 10", "label": "    parameter TAG_BITS      = ADDRESS_BITS - BLOCK_BITS - SET_BITS,"}
{"generated": "/*****************************************************************************\r *                                                                           *\r * Module:       Altera_UP_PS2                                               *\r * Description:                                                              *\r *      This module communicates", "label": "reg\t\t\t\tps2_data_reg;\r"}
{"generated": "// 7'd100:Dout=A[100];        7'd101:Dout=A[101];        7'd102:Dout=A[10", "label": "        7'd100:Dout=A[100];"}
{"generated": "//  else if(vld_out_0)  begin  count0<=count0+1;  if(count0==10)  begin  soft_reset_0<=1;  end  else ", "label": "  else if(vld_out_0)"}
{"generated": "//            8: active = 1'b0;            16: active = 1'b0;            32: active = 1'b0;            default: active = 1'b1;        endcase    end        assign", "label": "            8: active = 1'b0;"}
{"generated": "                  .set_valid(set_valid), .set_dirty(set_dirty), .set_tag(set_tag), .write_data_sel(write_data_sel), .valid(valid), .dir", "label": "                 .write_data_sel(write_data_sel), .dataOut(data_rd), .set_valid(set_valid), .valid(valid), .set_dirty(set_dirty), .dirty(dirty), .set_tag(set_tag), .tag(tag));\r"}
{"generated": "\tinitial", "label": "\tinitial begin"}
{"generated": "endendmodule", "label": "    src_num = 128; #1 $display(\"Source number = %d; Result number = %d\", src_num, log_src_num);"}
{"generated": "            if(isCollision) begin", "label": "            for(SnakeBodyIndex = SNAKE_MAX_SIZE - 1 ; SnakeBodyIndex > 0; SnakeBodyIndex = SnakeBodyIndex - 1) begin"}
{"generated": "module withdrawal(", "label": "module withdrawal("}
{"generated": "//     if (rst_n == 1'b0) begin", "label": "    #5 clk <= ~clk;"}
{"generated": ".read_data1(),.read_data2());endmodulemodule top_module(", "label": " .read_data1(),.read_data2()); "}
{"generated": "module tflipflop ( input clk, input rst, input t, output reg out);  \r", "label": "module demux8 (input wire i, j2, j1, j0, output wire [0:7] o);"}
{"generated": "        state_next = state_reg;", "label": "        state_next      = state_reg;"}
{"generated": "// File Name   : main_FSM.v", "label": "              if (solved) begin"}
{"generated": "assign ashi_ridle = (ashi_read == 0) && (ashi_read_state == 0);", "label": "assign ashi_ridle = (ashi_read  == 0) && (ashi_read_state  == 0);"}
{"generated": "                .cin(t_cin), \r\t\t.sum(t_sum[3:0]), \r\t\t.cout(t_sum[4])\r\t);\r\r\tinitial \r\tbegin\r\t\tt", "label": "                .cin(t_cin),\r"}
{"generated": " *                 Internal wires and registers Declarations                 *", "label": " *                           Constant Declarations                           *\r"}
{"generated": "write)\t\t   state <= st_start;\t\t else\t\t   state <= st_stop2;\t      end\t    st_stop2:\t      begin\t\t sclk_logic <= 1;\t\t state <= st_idle;\t      end", "label": "\t    st_startstop:"}
{"generated": "    .clk_out(clk),\r", "label": "    .clk_out(clk),\r"}
{"generated": "block.sdf\", uut.\\gpio_control_in_1a[5] ) ;\t\t\t$sdf_annotate(\"../../../caravel/sdf/gpio_control_block.sdf\", uut", "label": "\t\t.FILENAME(\"counter_wb.hex\")"}
{"generated": "\tlocalparam _add = 3'b000;\r", "label": "\tlocalparam _other_func = 3'b111;\r"}
{"generated": "`timescale 1ns / 1nsmodule FIFO #(  parameter integer RESET_TRIGGER = 0,  parameter integer DATA_WIDTH = 32,", "label": "          read_pointer <= 0;"}
{"generated": "\r    always @(posedge clk) begin\r        if (reset) begin\r            for (i = 0; i < BTB_SIZE; i = i + 1) begin\r                BTB[i] <= 0;", "label": "    wire PredictTaken;\r"}
{"generated": "    output reg [15:0] data_out,", "label": "    output [15:0] data_out"}
{"generated": "`timescale 1ns / ", "label": "  .mem_write(mem_write),"}
{"generated": "input clk,reset,", "label": "input clk,reset,"}
{"generated": "assign A_Pulse = (y == nth_occur);\r", "label": "assign A_Pulse = (y == first_occur);\r"}
{"generated": "always @ (posedge clk) begin", "label": "always @ (posedge clk) begin"}
{"generated": "\t\taltpll_component.port_pllena = \"PORT_UNUSED\",", "label": "\t\taltpll_component.port_pllena = \"PORT_UNUSED\",\r"}
{"generated": "  reg [2:0] ROM_addr;", "label": "reg [2:0] ROM_addr;"}
{"generated": "1'b0, 1'b0, `MNONE, 1'b0, 1'b0};            {`DECODE, 2'b01, 3'b110}: next", "label": "            {`LOAD, 2'bxx, 3'bxxx}: next <= {`IF1, 4'b1000, 3'b010, 1'b1, 1'b0, 1'b0, 1'bx, 1'bx, 1'b0, 1'b0, 1'b0, 1'b0, 1'b0, `MREAD, 1'b0, 1'b0};"}
{"generated": "    wire[1:0] health1;    wire[1:0] health2;    wire isGameOver;    reg firstWin = 0;    reg secondWin = 0;", "label": "    wire[1:0] health1, health2;"}
{"generated": "\talways @ (posedge clk or negedge n_reset)\r\t\tbegin\r\t\t\tif (n_reset == 0)\r\t\t\t\tbegin\r\t\t\t\t\tDFF1 <= 1'b0;\r\t\t\t\t\tDFF", "label": "\talways @ ( posedge clk )\r"}
{"generated": "module CAMSUB_mem (    input clk,    input rst,    input [7:0] xi,    output reg [63:0] x", "label": "    output reg [63:0] o_sub_MV,"}
{"generated": "\t\tend\t`endif\tinitial begin\t\tRSTB = 1;\t\tCSB = 1;\t\tpower1 = 1;\t\tpower2 = 1;\tend\tcounter_la uut (\t\t.clock", "label": "\t\t\t$sdf_annotate(\"../../../caravel/sdf/xres_buf.sdf\", uut.rstb_level) ;"}
{"generated": "    output[511:0] AXIS_FIFO_TDATA,    output        AXIS_FIFO_TVALID,    input         AXIS_FIFO_TREADY    //==================================================================);", "label": "    output[511:0] AXIS_FIFO_TDATA,"}
{"generated": "module m_ser_tb;", "label": "                data_o <= Q_q[1];"}
{"generated": "endmodule", "label": "    @(posedge done);"}
{"generated": "// 4'd10: CondEx = N == V;        4'd11: CondEx = N != V;        4'd12: CondEx = C & (~Z);        4'd", "label": "        4'd10: CondEx = ~(N ^ V);"}
{"generated": "module conv55 #(parameter BIT_WIDTH = 8, OUT_WIDTH = 32) (", "label": "conv55 #(.BIT_WIDTH(BIT_WIDTH), .OUT_WIDTH(OUT_WIDTH)) CONV2 ("}
{"generated": "else read_empty<=(gray_next==sync_write_ptr);endendmodule", "label": "else read_empty<=(gray_next==sync_write_ptr);"}
{"generated": "wire\t[7:0]", "label": "input UART_RXD,\r"}
{"generated": "   input [31:0] b,\r   output reg [31:0] s\r);\r\r//----------------------------- Decleration of variables\r   reg [31:0] a_sig, b_sig,", "label": "   input [31:0] b, \r"}
{"generated": "//        psel = 1'b0;        penable = 1'b0;\t\t\t\t// Write Sequence C\t\t @(posedge clk);\t\tpwrite = 1'b1;        psel = 1'", "label": "        psel = 1'b0;"}
{"generated": "//   temp_2 = d2_in;   endendalways @ (negedge clkb)beginif (restart == 1'b1) begin   d_out = 4'b0000;   done = ", "label": "   temp_2 = d2_in;"}
{"generated": "  assign data = (oe == 1'b1) ? tmp_data : {DATA_WIDTH{1'bZ}};", "label": "  always @ (posedge clk) begin"}
{"generated": "            state <= init;\r", "label": "            state <= init;\r"}
{"generated": "    4'd9 : seg = 7'b0010_000;\r", "label": "    4'd9 : seg = 7'b0010_000;\r"}
{"generatedlabel": "                         state <= stop;"}
{"generated": "end\relse if(re==1'b1 && empty==1'b0)\rbegin\r", "label": "dout<=8'b0; end\r"}
{"generated": "    reg [$clog2(divider)-1:0] counter;", "label": "reg [7:0] counter;"}
{"generated": "-- Date           :   2000/09/20-- Author          :   Jamil Khatib-- Change Details  :   Created", "label": "-- Date            :   20 September 2000"}
{"generated": "endmodule", "label": "    .din(register[2]),"}
{"generated": "X       <= AppleX;                OldAppleY       <= AppleY;                AppleX          <= MIN_WIDTH  + (SnakeX[0] * OldAppleY + 20) % MAX_WIDTH     - (WIDTH", "label": "                            (X >= SnakeX[901]  && X <= SnakeX[901] - 1 + (WIDTH * 2)) && (Y >= SnakeY[901] && Y <= SnakeY[901] - 1 + (WIDTH *2)) ||"}
{"generated": "module PRIORITY_BLOCK(IRs, CU_MODE, CU_DATA, CU_WRITE, PRIORITY_DATA, PRIORITY_", "label": "                if(ICW4_exists) count = 2'b11;"}
{"generated": "`timescale 1ns / 1psmodule font_gen    (        input wire clk,        input wire video_on", "label": "            if (text_bit_on && (char_addr != 7'h0d))"}
{"generated": " wires:    wire [31:0] i_SysCtrl_peripherals_AXI4LITE_to_Ctrl_AR_ADDR;    wire [1:0] i_SysCtrl_peripher", "label": "    assign axi_imem_bridge_r_ready_i = axi_imem_bridge_AXI4LITE_to_Ctrl_xbar_AXI4LITE_IMEM_R_READY;"}
{"generated": "\toutput  wire \t\t\th_sync,\t\t// Horizontal sync\t\toutput  wire \th_sync,\toutput  wire \tv_sync,\toutput  wire \tv_blank,\toutput ", "label": "\toutput  wire led6, "}
{"generated": "_b),             .ena_i(op_en_b_i),             .pstrb_i(pstrb_i),\t\t\t            .row_bus_o(op_b_sig_row_o),", "label": "\t\t\t\t\toperand_C_o <= (control_reg[1] ? sp_op : {BW*Elements_Num{1'b0}}); "}
{"generated": "assign sd_cas = sd_cmd[1];assign sd_we  = sd_cmd[0];// ---------------------------------------------------------------------// ------------------------ cycle state machine ------------------------// ---------------------------------------------------------------------reg [2:0] state;", "label": "assign sd_cas = sd_cmd[1];"}
{"generated": "        if (cnt == divider) cpol_1 <= 1;", "label": "        if (cnt == divider) cpol_1 <= 1;"}
{"generated": "`timescale 1ns / 1ps////////////////////////////////////////////////////////////////////////////////// Company: ", "label": "                         carry = 1'b0;"}
{"generated": "//output wire SDRAM_nWE,  output wire [12:0] SDRAM_A,  inout wire [15:0] SDRAM_DQ,  output wire [1:0]", "label": "  output wire SDRAM_nWE,"}
{"generated": "`timescale 1ns / 1ps//////////////////////////////////////////////////////////////////////////////////// Company: // Engineer: // // Create Date: 18.03.2023 16:51", "label": "        .sel(1'b0), "}
{"generated": "endmodulemodule top_module(", "label": "#200 Cof_rdy=1;\r"}
{"generated": "// dmpulldown_q != utmi_dmpulldown_i)        otg_update_q <= 1'b1;end//-----------------------------------------------------------------// UTMI Transmit Data//-----------------------------------------------------------------reg [", "label": "             dmpulldown_q != utmi_dmpulldown_i)"}
{"generated": "    always @(posedge clock) begin", "label": "    always @ (posedge reset, posedge clock) begin"}
{"generated": "            CHECK_BY_PRIORITY:                begin                    if(circ_buffer[idx_cnt_ff] < NUM_SW_INST) begin                        if(sw_busy[circ_buffer[idx_c", "label": "            CHECK_BY_PRIORITY:"}
{"generated": "    end else begin      q1 <= in;      q2 <= q1;      q3 <= q2;    end  end  assign out = (q1 & q2 & q3);endmodule  // end Debounc", "label": "    end else begin"}
{"generated": "//", "label": "                  o_Rx_Active <= 1'b0;"}
{"generated": " z = y;\t\t\t//when combine: z must combine with z - 1\t\t\t//until z = 2 and the loop end\t\t\t//\t\t\t//group member would increase in each loop\t\t\t//combine y and z\t\t\t//if(y", "label": "\t\t\t\t8'b00001111: huffman_code[x] <= (huffman_code[x] >> 4);"}
{"generated": "endmodule\r\rmodule CSM8_line(A, B, Bout, D);\rinput [15:0] A;\rinput [7:0] B;\routput [7:0] Bout;\r", "label": "CSM8_line D_line7(.A({Dout6, A[8]}), .B(B), .Bout(Bout[7]), .D(Dout7));\r"}
{"generated": "    #1000 $finish;\rend\r\ralways #5 clk = ~clk;\r\rendmodule", "label": "    #100 $finish;\r"}
{"generated": "module ROM(ROM_addr, ROM_data);\r", "label": "module ROM (ROM_data, ROM_addr);\r"}
{"generated": "    CU_OUT_x CU(opcode, RegDst, Jump, Branch, MemRead, MemWrite, RegWrite, MemToReg, ALUSrc, ALUOp);//Kontrollimi i CPU", "label": "CU ControlUnit(opcode,"}
{"generated": "                Prediction[PC[`BINDEX]] <= (taken) ? 2'b11 : 2'b01;                end            end        end        else if (BranchE) begin            Prediction[PC[", "label": "                    Prediction[PC[`BINDEX]] <= (taken) ? 2'b11 : 2'b10;"}
{"generated": "\t\t\tnxt_st=step1;\r", "label": "\t\tnxt_st=step1;\r"}
{"generated": "`timescale 1ns / 1ps", "label": "And_gate uut(.A(X), .B(Y), .F(Z));"}
{"generated": "fd_sc_hd__decap_3 PHY_46 (); sky130_fd_sc_hd__decap_3 PHY_47 (); sky130_fd_sc_hd__", "label": " sky130_fd_sc_hd__tapvpwrvgnd_1 TAP_375 ();"}
{"generated": "reg [WORD_SIZE-1:0] mem_copy[RAM_SIZE-1:0];", "label": "reg [WORD_SIZE-1:0] mem_copy[RAM_SIZE-1:0];"}
{"generated": "\testi_bits = 12'b0000_0001_1111; \r\t#20\r\tinfo_bits = 12'b0000_0001_", "label": "\testi_bits = 12'b0010_0001_1010; \r"}
{"generated": "        reg[7:0] data_b;    reg[7:0] data_out_r_temp;    reg[7:0] data_out_g_temp;    reg[7:0] data_", "label": "    always@(posedge clk) begin"}
{"generated": "`timescale 1ns / 1ps//////////////////////////////////////////////////////////////////////////////////// Company: // Engineer: // // Create Date: 04/05/2", "label": "            $display(\"Output Values:\");"}
{"generated": "VGND)); sky130_ef_sc_hd__decap_12 FILLER_0_3_69 (.VGND(VGND),    .VPWR(VPWR),    .VPB(VP", "label": "    .VPWR(VPWR));"}
{"generated": "\t\t\t2'b10 : SEG_DATA = 8'b01011011;\t\t\t\t2'b11 : SEG_DATA = 8'b01001111;\t\t\t", "label": "\t\t\t\t2'b10 : SEG_DATA = 8'b01011011;"}
{"generated": "// \t", "label": "            Tff_B <= 0;"}
{"generated": "    input wire clk,", "label": "    input wire                   clk,"}
{"generated": "parameter IDLE = 4'b0000;\r", "label": "reg [12:0] baud_count;\r"}
{"generated": "endmodule", "label": " 2'b11: immext = {{12{instr[31]}}, instr[19:12],"}
{"generated": "`timescale 1ns / 1ps", "label": "\t\t\t\t\t\t(bin_data==2)?8'b00100101:"}
{"generated": "\t\t\t\t.eccstatus (),\t\t\t\t.q_b (),\t\t\t\t.rden_b (1'b1),\t\t\t\t.wren_b (1'b0));\tdefparam\taltsyncram_component.address", "label": "\t\t\t\t.eccstatus (),"}
{"generated": "module pong_game(", "label": "\toutput\t\t          \t\tDRAM_RAS_N,"}
{"generated": "alessb lth3(.i0(a0[2]),.i1(b0[2]),.a_lth_b(out[2]));\r\r", "label": "alessb lth3(.i0(a0[2]),.i1(b0[2]),.a_lth_b(out[2]));\r"}
{"generated": "\t\t\t\t\t\t.b3(b3[1:0]), \r\t\t\t\t\t\t.b4(b4[1:0]), \r\t\t\t\t\t\t.b5(b5[1:0]), \r\t\t\t\t\t\t.b6(", "label": "\t\t\t\t\t\t.b3(b3[1:0]), \r"}
{"generated": "endmodulemodule top_module(", "label": "                  if(lamp[15:0] == 16'b0000000000111111|| lamp[15:0]== 16'b0000011111111111) next = 3'd4;"}
{"generated": "endmodule// Repo Name: Shwetakr08/RTL_CODING_100DAY", "label": "  #300 $finish;"}
{"generated": "\t\tcase(AluController)", "label": "\t\t\tcase(AluController)"}
{"generated": "\r                if (i == 32) begin\r                    Hi = quo;\r                    Lo = resto[31:0];\r                end\r            end\r        end\r\r    end\r\rendmodule", "label": "                if (i == 33) begin\r"}
{"generated": " wire n139;  wire n14;  wire n140;  wire n141;  wire n142;  wire n143;  wire n144;  wire n", "label": "    .RESET_B(n117)"}
{"generated": "0;   next_tx_mask = 8'h00;   next_tx_wcnt = tx_wcnt;   case (tx_state)     IDLE:   begin     if (we_1)", "label": "   next_tx_wcnt = 8'h00;"}
{"generated": "\tinput\t[31:0] \tdata0x;\r", "label": "\tinput\t[3:0]  data0x;\r"}
{"generated": ";assign HC1\t= {1'b0, encoding_pure_1, encoding_mixed_1, encoding_pure_2, encoding_mixed_2, encoding_pure_3, encoding_mixed_", "label": "always@(posedge clk or posedge reset) begin"}
{"generated": "\tinitial begin", "label": "\treg [1:0] state;"}
{"generated": "\t\t       .clk_50m(clk),", "label": "\t       .clk_50m(clk),"}
{"generated": "reg [DATA_BITS-1:0] buffer_", "label": "    .write_enable(glb_write_enable),"}
{"generated": "// assign w_c = w_b;// \u5bc4\u5b58\u5668\u8d4b\u503calways@(posedge clk)begin    r_a <= a;    r_b <= b;    c <= w_c;endalways@", "label": "assign w_c = p_b;"}
{"generated": "module channel(\r", "label": "                default: d_out = 'b0;"}
{"generated": "output wire [`SCRATCHPAD_SRAM_ADDRESS_UPPER_BOUND-1:0] scratchpad_sram_read_address        ,   input  wire [`SCRATCHPAD_SRAM_", "label": "  output wire [`SCRATCHPAD_SRAM_ADDRESS_UPPER_BOUND-1:0]     scratchpad_sram_read_address        , "}
{"generated": "//reg [15:0] D", "label": "output reg [15:0] Dfifo,"}
{"generated": "\t\t\t\tcounter_reg <= counter_next;\r\tend\r\t\r\talways @(*)\r\tbegin\r\t\tcounter_next = counter_reg + 1'b1;\r\t\tout = counter_reg;\r", "label": "\t\t\t\tcounter_reg <= counter_next;\r"}
{"generated": "endmodule  // end ClockDivider", "label": "  initial clk_out = 0;"}
{"generated": "_reg;assign tap_Di = tap_Di_reg;assign tap_A = tap_A_reg;assign data_WE = data_WE_reg;assign data_EN = data_EN_reg;assign data_", "label": "                    rvalid_reg=last_rvalid;"}
{"generated": "module test_datapath;", "label": "      default: y_next = 1'sbx;"}
{"generated": "\t\t\t\t\tALUSelector_src = 3'bxxx;\r", "label": "\t\t\t\t\tMemaReg_src = 1'bx;\r"}
{"generated": "\t\t\t      .write_data(write_data_external),\t\t\t      .full(full_external_next),\t\t\t      .w_synchronization(w_tffs_out)", "label": "\t\t\t      .full(full_external_next),"}
{"generated": "`timescale 1ns / 1psmodule CPU (", "label": "        .debug_reg(debug_reg)"}
{"generated": "if(branchstall)begin", "label": "lwstall = ((rsD == rtE) | (rtD == rtE)) & MemtoRegE;"}
{"generated": "`timescale 1ns/100ps", "label": "    shamt = 5'd0;"}
{"generated": "input   wire   \t\t                           \tIn_snd_empty\t\t\t;\r", "label": "input   wire\t\t\t\t\t\t\t\t\tIn_snd_empty\t\t\t;\r"}
{"generated": "=0;reg line1;make_box_comb draw_line1(\t.X_pix(X_pix),\t.Y_pix(Y_pix),\t.box_width(line1_width),\t.", "label": "\t.box_height(line16_height),"}
{"generated": "//=========================================================================             .set_idx(set_idx),             .tag(tag),             .match(match),             .hits(hits),             .enables(enables)         );     end else if (RE", "label": "             .set_in(set_idx),"}
{"generated": "_INST, mem_inst, 0, `SIZE_DATA-1);        $readmemh (`MEM_DATA, mem_data, 0, `SIZE_DATA-1);        $readmemh (`MEM_G", "label": "        $display(\"                            ,dxxxxkOOOOkkkxdooddooolllok0000Okdollllcokk,                                                                                       \");"}
{"generated": "always @ (a or b or c or d or sel) begin", "label": "    always @ (a or b or c or d or sel)"}
{"generated": "endmodule", "label": "wire [4:0] carry_wire;"}
{"generated": "  wire                  o_tvalid;  wire                o_tlast;  reg                   o_tredady;  initial begin", "label": "  wire               o_tvalid;"}
{"generated": "endmodulemodule top_module(", "label": "\t\t\t\tdefault ALUcontrol = 0;"}
{"generated": "// Tool Version Limit: 2", "label": "    .we0(shift_reg_we0),"}
{"generated": "m_out1_inc};  m_w = m_acti;  y_w = y_acti;  x_w = x_acti;  m_ow = m_acti;  y_", "label": "  x_w_inc = (x_w=='d2)? 'd0 : x_w + 1'd1;"}
{"generated": "    if (btnu) begin", "label": "    if (btnu) begin"}
{"generated": "    if (!Rst_n)                 Out <= 1'b0;    else         if (Start || ~|cnt)     Out <= 1'b1; // Comen\u00e7a for\u00e7at o auto-inici        else if", "label": "    if (!Rst_n)                 Out <= 1'b0;"}
{"generated": "endmodule", "label": "endmodule"}
{"generated": "            reset = 1;", "label": "                #200; reset = 1; #10 reset = 0;"}
{"generated": "\t\tinput wire  S_AXI_AWVALID,\t\t// Write address ready. This signal indicates that the slave is ready to accept an    \t\t// address and associated control signals.", "label": "\t\tinput wire  S_AXI_AWVALID,"}
{"generated": "    PWM_Generator pwm (", "label": "    PWM_Generator pwm_gen ("}
{"generated": "--------\treg [31:0] reg0;\treg [31:0] reg1;\treg [31:0] reg2;\treg [31:0] reg3;\treg [31", "label": "\treg [C_S_AXI_DATA_WIDTH-1:0]\tslv_reg13;"}
{"generated": "reg [15:0] Q;\r", "label": "wire [15:0] P_sum;\r"}
{"generated": "`timescale 1ns/100psmodule Mux21_32bit(sel, a, b, out);  input sel;  input", "label": "  assign is0 = (result == 32'b0) ? 1 : 0;"}
{"generated": "module reg_9b(clk, enable, data_in, data_out);", "label": "module AddSub(raout, buswires, sub, result);"}
{"generated": "\telse if (left_right_clk_rising_edge == 1'b1)\r\t\tleft_channel_was_read <= 1'b0;\r\telse if (read_left_channel == 1'b1", "label": "\telse if (read_left_channel)\r"}
{"generated": "endmodule", "label": "    #50 data_in_tb=2;"}
{"generated": "[31:24] } : pmp_wr_data_latch;    pmp_rd_data_e <= endian_little_s ? {  pmp_rd_data_buf[7:0", "label": "            rx_byte_done <= 1;"}
{"generated": "datapath block_2(clk,reset,StallF,StallD,ForwardAD,ForwardBD,ForwardAE,ForwardBE,RegDstD,ALUSrcD,ALU", "label": "data_memory block_2(ALUOutM,WriteDataM,MemwriteM,RD,clk);\r"}
{"generated": "    input [3:0] a,", "label": "    and_gate and0 (.a(a[0]), .b(b[0]), .x(results[0]));"}
{"generated": "\toutput reg [31:0] result,\r", "label": "\toutput reg [31:0] result,\r"}
{"generated": "else if(count0==4'b0011)HEX0<=x3;else if(count0==4'b0100)HEX0<=x4;else if(count0==", "label": "else if(count0==4'b0011)"}
{"generated": "// //         2'", "label": "/*Write your design here*/"}
{"generated": "module io_pad_controller (", "label": "    localparam  ST_RESET        = 'd0;"}
{"generated": "q_0 = (b_1011 & p_ge_neg3 & ~p_ge_3);    wire p_1011_q_1 = (b_1011 & p_ge", "label": "    wire p_1101_q_1 = (b_1101 & p_ge_3 & ~p_ge_10);"}
{"generated": "assign inst23_0 = instruc[23:0];\r", "label": "assign inst23_0 = instruc[23:0];\r"}
{"generated": "module tb_mod_counter;", "label": "    $dumpfile(\"mod_counter_tb.vcd\");"}
{"generated": "module FA(NUM1,NUM2,CIN,SUM,COUT);  input NUM1,NUM2,CIN;  output reg SUM,COUT;  wire HA1_COUT,HA2_", "label": "module FA(NUM1,NUM2,CIN,SUM,COUT);"}
{"generated": "data1 \t( ALU_data1 ),        .i_data2 \t( ALU_data2 ),        .i_control \t( ALU_control ),        .o_data  \t( o_data    ),        .", "label": "        end else begin"}
{"generated": "_right_8_r = {shift_right_fill_r[31:24], shift_right_4_r[31:8]};\r            else\r                shift_right_8_r = shift", "label": "            if (alu_b_i[4] == 1'b1)\r"}
{"generated": "_export),      // adc_pll_locked.export\t\t.clk_in_pll_c1     (adc_pll_clock_clk),                        // adc_pll_clock.", "label": "\t\t.CSD_SLOT_63      (5'b00000),"}
{"generated": "    reg [n-1:0] O;    reg CLK;    reg RST;    reg EN;    reg [n-1:0] D;    n_bit_register dut (.I(I), .O", "label": "    reg [1:0] FunSel;"}
{"generated": "module test_main;", "label": "        end else begin"}
{"generated": "  input clk1,", "label": "    input clk1,"}
{"generated": "\twire [2:0] shamt;\r\twire [3:0] opcode;\r\r\t// Instantiate the Unit Under Test (UUT)\r\tmain uut (\r\t\t.clk(clk", "label": "\twire [3:0] opcode;\r"}
{"generated": "assign Imm = currentIns[15:0];assign IDataOut = {currentInsAddr[31:28], currentIns[25:0], 2'b00};assign WriteReg = (RegDst", "label": "assign Imm = currentIns[15:0];"}
{"generated": "    always #5 clk=~clk;endmodule", "label": "    always #20 clk=~clk;"}
{"generated": "//            2'b01 : begin       //            m = 0;                          if(st)begin                product[15:8] <= mlt;               ", "label": "                state <= 2'b01;"}
{"generated": "endmodule// Repo Name: wangyuxiao2000/ccsds-ldpc", "label": "                           .s_axis_tdata(s_axis_tdata),"}
{"generated": "_reg;assign tap_Di = tap_Di_reg;assign tap_A = tap_A_reg;assign data_WE = data_WE_reg;assign data_EN = data_EN_reg;assign data_", "label": "        last_data_A <= 0;"}
{"generated": "MemWriteD=0;\rBranchD=1;\rALUSrcD=0;\rRegDstD=0;\rRegWriteD=0;\rALUOp", "label": "MemWriteD=0;\r"}
{"generated": "    //IF_ID_IR<= 32'd0;    IF_ID_NPC<= 32'd0;    ID_EX_A<= 32'd0;    ID_EX_B", "label": "    REG[0] <= 32'h00000000;"}
{"generated": "(Inp[15],Inp[14],Shift_Mag[0],S1[15]);    Mux2_1 Stage1_14(Inp[14],Inp[13],Shift", "label": "module Compare_Found_Result(input Compare_Found, output Compare_Found_Out);"}
{"generated": "    $monitor($time,\":\\t En=%b, I=%b, O=%b\\n\", En, I, O);", "label": "    $monitor($time,\":\\t En=%b, I=%b, O=%b\\n\", En, I, O);"}
{"generated": "    A_tb = 16'b0000000000000001;", "label": "    A_tb = 'd4;"}
{"generated": "    .in(in_3),\r    .out(out_3)\r);\rGw_G_single row4 (\r    .clk(clk), .rst(rst),\r    .in(", "label": "    .clk(clk), .rst(rst),\r"}
{"generated": "// Company: ", "label": "assign OUT = IN_1 + IN_2 ;"}
{"generated": "\tparameter [11:0] n2_xmin = -12'd127;\r", "label": "\tparameter [11:0] n2_xmin = -12'd127;\r"}
{"generated": "\toutput\t[7:0]\tred_leds_external_connection_export;\tinput\t\treset_reset_n;\toutput\t[6:0]\tsev_seg_0_external_connection_export;", "label": "\toutput\t[16:0]\tred_leds_external_connection_export;"}
{"generated": "0   :  0   ;         ?   1   :  1   ;        0   0   :  0   ;        0   1   :  1   ;        1   0   :  0   ;        1   ", "label": "         0   0   ?   ?   ?   0  :  0   ;"}
{"generated": "    rx_bit(8'd6);\r", "label": "    rx_bit(8'd6);\r"}
{"generated": "endmodule", "label": "        i_tsel = 1;"}
{"generated": "// $Header: /devl/xcs/repo/env/Databases/CAEInterfaces/verunilibs/data/glbl.v,v 1.14 2010/10/", "label": "    wire FCSBO_GLBL;"}
{"generated": "reg signed [31:0] mem [255:0];\r", "label": "reg [31:0] mem [255:0];\r"}
{"generated": "                    clockCount <= clockCount + 1;                end            end            DATA_BITS: begin                if (&clockCount) begin                    receivedData <= { receivedData[6:0], inputSw[1] };                    bitId", "label": "                    if (&inputSw) begin"}
{"generated": "`timescale 1ns / 1psmodule control_unit(", "label": "        end else begin"}
{"generated": "reg t_clk;", "label": "reg t_vote_over;"}
{"generated": "        .RegWrite(regwrite), \r", "label": "        .RegWrite(regwrite), \r"}
{"generated": "        .fifo_wr_en(wr_en_bus2fifo_w)    );    fifo # (        .FIFO_SIZE(NUM_SW_INST),        .W_WIDTH(FR", "label": "        .fifo_wr_en(wr_en_bus2fifo_w)"}
{"generated": "    .dump_packet_node2(dump_packet_node2),\r    .dump_packet_node3(dump_packet_node3),\r    /*Ring to NIC Signal*/\r   ", "label": "    .dump_packet_node2(dump_packet_node2),\r"}
{"generated": "/*--- ID ---*/\rwire [31:0] regA_data_id, regB_data_id;\rwire [4:0] rs_id, rt_id, rd_id", "label": "/*--- ID ---*/\r"}
{"generated": "            BrLT = (A < B);        end", "label": "            BrLT = (A[31] < B[31]) ? 1'b1 : (A[31] == B[31]) ? (A < B) : 1'b0;"}
{"generated": "\t//\tLine 1\r\tLCD_LINE1+0:\tLUT_DATA\t<=\thex2char(d0x0[3:0]);\r\tLCD_LINE1+1:\tLUT_", "label": "\tLCD_INTIAL+4:\tLUT_DATA\t<=\t9'h080;\r"}
{"generated": "\t\t#(2*p) alu_op_i = `ALU_SRA;\t\r\t\t#(p)   $display(\"T=%03t ns: %h >>> %h = %h\\n", "label": "\t\t#(2*p) alu_op_i = `ALU_SRA;\t\r"}
{"generated": "    parameter S0 = 2'b00, S1 = 2'b01, S2 = 2'b10;", "label": "    parameter s0 = 0, s1 = 1, s2 = 2, s3 = 3;"}
{"generated": "          assign we_array[i] = reset? 1 : write_en & (addr_in == i);", "label": "          assign we_array[i] = reset? 1 : write_en & (addr_in == i);"}
{"generated": "//////////////////////////////////////////////////////////////////////////                                                              //////// Copyright (C) 2013-2022 Authors                              ////////                                                              //////// Based", "label": "        d_write <= 0;"}
{"generated": "\t\t\t else if(Cp)\r\t\t\t\tbegin\r\t\t\t\t\tPC_Counter <= PC_Counter + 1;\r\t\t\t\tend\r\t\tend\rendmodule", "label": "\t\t\t else if(Cp)\r"}
{"generated": "\tinput  [31:0] I0,I1,I2,I3;", "label": "     input  [31:0] I0,I1,I2,I3;"}
{"generated": "\twire or1, and1;\r", "label": "\twire and2, and3, and4, or1;\r"}
{"generated": "215, N216,         N217, N218, N219, N220, N221, N222, N223, N224,", "label": "        \\ne_42/GTV2 [7]) );"}
{"generated": "    if (start) begin", "label": "                cmd_oe <= 0;"}
{"generated": "  wire [7:0]chosen;", "label": "  reg [2:0] SLAVE_ADRESS;"}
{"generated": "// ============================================================================module CRC32_D32(    data_in,    crc_last,    crc_out);//", "label": "assign    newcrc[4] = d[31] ^ d[30] ^ d[29] ^ d[25] ^ d[24] ^ d[20] ^ d[19] ^ d[18] ^ d[15] ^ d[12] ^ d[11] ^ d[8] ^ d[6] ^ d[4] ^ d[3] ^ d[2] ^ d[0] ^ c[0] ^ c[2] ^ c[3] ^ c[4] ^ c[6] ^ c[8] ^ c[11] ^ c[12] ^ c[15] ^ c[18] ^ c[19] ^ c[20] ^ c[24] ^ c[25] ^ c[29] ^ c[30] ^ c[31];"}
{"generated": "`include \"constants.v\"", "label": "\t\t(ALUControlE == `SGT_FUNCT3) ? a > b :"}
